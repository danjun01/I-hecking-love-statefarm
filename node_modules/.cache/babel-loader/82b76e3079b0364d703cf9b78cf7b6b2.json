{"ast":null,"code":"import _toConsumableArray from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __esm = function __esm(fn, res) {\n  return function __init() {\n    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n  };\n};\n\n// ../../../react-shim.js\nimport React from \"react\";\nvar init_react_shim = __esm({\n  \"../../../react-shim.js\": function reactShimJs() {\n    \"use strict\";\n  }\n});\n\n// src/index.ts\ninit_react_shim();\n\n// src/range-slider.tsx\ninit_react_shim();\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig, useTheme } from \"@chakra-ui/system\";\n\n// ../../legacy/utils/src/dom.ts\ninit_react_shim();\nvar dataAttr = function dataAttr(condition) {\n  return condition ? \"\" : void 0;\n};\nvar ariaAttr = function ariaAttr(condition) {\n  return condition ? true : void 0;\n};\nvar cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  return classNames.filter(Boolean).join(\" \");\n};\n\n// ../../legacy/utils/src/function.ts\ninit_react_shim();\nfunction callAllHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n  return function func(event) {\n    fns.some(function (fn) {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\n\n// src/range-slider.tsx\nimport { useMemo as useMemo2 } from \"react\";\n\n// src/use-range-slider.ts\ninit_react_shim();\nimport { usePanEvent } from \"@chakra-ui/react-use-pan-event\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { percentToValue, roundValueToStep, valueToPercent, clampValue } from \"@chakra-ui/number-utils\";\nimport { useCallback, useMemo, useRef, useState, useId } from \"react\";\n\n// src/slider-utils.ts\ninit_react_shim();\nfunction getIds(id) {\n  return {\n    root: \"slider-root-\".concat(id),\n    getThumb: function getThumb(i) {\n      return \"slider-thumb-\".concat(id, \"-\").concat(i);\n    },\n    getInput: function getInput(i) {\n      return \"slider-input-\".concat(id, \"-\").concat(i);\n    },\n    track: \"slider-track-\".concat(id),\n    innerTrack: \"slider-filled-track-\".concat(id),\n    getMarker: function getMarker(i) {\n      return \"slider-marker-\".concat(id, \"-\").concat(i);\n    },\n    output: \"slider-output-\".concat(id)\n  };\n}\nfunction orient(options) {\n  var orientation = options.orientation,\n    vertical = options.vertical,\n    horizontal = options.horizontal;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nvar zeroSize = {\n  width: 0,\n  height: 0\n};\nvar normalize = function normalize(a) {\n  return a || zeroSize;\n};\nfunction getStyles(options) {\n  var orientation = options.orientation,\n    thumbPercents = options.thumbPercents,\n    thumbRects = options.thumbRects,\n    isReversed = options.isReversed;\n  var getThumbStyle = function getThumbStyle(i) {\n    var rect = thumbRects[i] ?? zeroSize;\n    return _objectSpread({\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\"\n    }, orient({\n      orientation: orientation,\n      vertical: {\n        bottom: \"calc(\".concat(thumbPercents[i], \"% - \").concat(rect.height / 2, \"px)\")\n      },\n      horizontal: {\n        left: \"calc(\".concat(thumbPercents[i], \"% - \").concat(rect.width / 2, \"px)\")\n      }\n    }));\n  };\n  var size = orientation === \"vertical\" ? thumbRects.reduce(function (a, b) {\n    return normalize(a).height > normalize(b).height ? a : b;\n  }, zeroSize) : thumbRects.reduce(function (a, b) {\n    return normalize(a).width > normalize(b).width ? a : b;\n  }, zeroSize);\n  var rootStyle = _objectSpread({\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0\n  }, orient({\n    orientation: orientation,\n    vertical: size ? {\n      paddingLeft: size.width / 2,\n      paddingRight: size.width / 2\n    } : {},\n    horizontal: size ? {\n      paddingTop: size.height / 2,\n      paddingBottom: size.height / 2\n    } : {}\n  }));\n  var trackStyle = _objectSpread({\n    position: \"absolute\"\n  }, orient({\n    orientation: orientation,\n    vertical: {\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      height: \"100%\"\n    },\n    horizontal: {\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      width: \"100%\"\n    }\n  }));\n  var isSingleThumb = thumbPercents.length === 1;\n  var fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];\n  var range = isSingleThumb ? fallback : thumbPercents;\n  var start = range[0];\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start;\n  }\n  var percent = Math.abs(range[range.length - 1] - range[0]);\n  var innerTrackStyle = _objectSpread({}, trackStyle, orient({\n    orientation: orientation,\n    vertical: isReversed ? {\n      height: \"\".concat(percent, \"%\"),\n      top: \"\".concat(start, \"%\")\n    } : {\n      height: \"\".concat(percent, \"%\"),\n      bottom: \"\".concat(start, \"%\")\n    },\n    horizontal: isReversed ? {\n      width: \"\".concat(percent, \"%\"),\n      right: \"\".concat(start, \"%\")\n    } : {\n      width: \"\".concat(percent, \"%\"),\n      left: \"\".concat(start, \"%\")\n    }\n  }));\n  return {\n    trackStyle: trackStyle,\n    innerTrackStyle: innerTrackStyle,\n    rootStyle: rootStyle,\n    getThumbStyle: getThumbStyle\n  };\n}\nfunction getIsReversed(options) {\n  var isReversed = options.isReversed,\n    direction = options.direction,\n    orientation = options.orientation;\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed;\n  }\n  return !isReversed;\n}\n\n// src/use-range-slider.ts\nimport { useSizes } from \"@chakra-ui/react-use-size\";\nfunction useRangeSlider(props) {\n  var _props$min = props.min,\n    min = _props$min === void 0 ? 0 : _props$min,\n    _props$max = props.max,\n    max = _props$max === void 0 ? 100 : _props$max,\n    onChange = props.onChange,\n    valueProp = props.value,\n    defaultValue = props.defaultValue,\n    isReversedProp = props.isReversed,\n    _props$direction = props.direction,\n    direction = _props$direction === void 0 ? \"ltr\" : _props$direction,\n    _props$orientation = props.orientation,\n    orientation = _props$orientation === void 0 ? \"horizontal\" : _props$orientation,\n    idProp = props.id,\n    isDisabled = props.isDisabled,\n    isReadOnly = props.isReadOnly,\n    onChangeStartProp = props.onChangeStart,\n    onChangeEndProp = props.onChangeEnd,\n    _props$step = props.step,\n    step = _props$step === void 0 ? 1 : _props$step,\n    getAriaValueTextProp = props.getAriaValueText,\n    ariaValueText = props[\"aria-valuetext\"],\n    ariaLabel = props[\"aria-label\"],\n    ariaLabelledBy = props[\"aria-labelledby\"],\n    name = props.name,\n    _props$focusThumbOnCh = props.focusThumbOnChange,\n    focusThumbOnChange = _props$focusThumbOnCh === void 0 ? true : _props$focusThumbOnCh,\n    _props$minStepsBetwee = props.minStepsBetweenThumbs,\n    minStepsBetweenThumbs = _props$minStepsBetwee === void 0 ? 0 : _props$minStepsBetwee,\n    htmlProps = _objectWithoutProperties(props, [\"min\", \"max\", \"onChange\", \"value\", \"defaultValue\", \"isReversed\", \"direction\", \"orientation\", \"id\", \"isDisabled\", \"isReadOnly\", \"onChangeStart\", \"onChangeEnd\", \"step\", \"getAriaValueText\", \"aria-valuetext\", \"aria-label\", \"aria-labelledby\", \"name\", \"focusThumbOnChange\", \"minStepsBetweenThumbs\"]);\n  var onChangeStart = useCallbackRef(onChangeStartProp);\n  var onChangeEnd = useCallbackRef(onChangeEndProp);\n  var getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  var isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction: direction,\n    orientation: orientation\n  });\n  var _useControllableState = useControllableState({\n      value: valueProp,\n      defaultValue: defaultValue ?? [25, 75],\n      onChange: onChange\n    }),\n    _useControllableState2 = _slicedToArray(_useControllableState, 2),\n    valueState = _useControllableState2[0],\n    setValue = _useControllableState2[1];\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\"[range-slider] You passed an invalid value for `value` or `defaultValue`, expected `Array` but got `\".concat(typeof valueState, \"`\"));\n  }\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDragging = _useState2[0],\n    setDragging = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isFocused = _useState4[0],\n    setFocused = _useState4[1];\n  var _useState5 = useState(-1),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activeIndex = _useState6[0],\n    setActiveIndex = _useState6[1];\n  var isInteractive = !(isDisabled || isReadOnly);\n  var initialValue = useRef(valueState);\n  var value = valueState.map(function (val) {\n    return clampValue(val, min, max);\n  });\n  var spacing = minStepsBetweenThumbs * step;\n  var valueBounds = getValueBounds(value, min, max, spacing);\n  var stateRef = useRef({\n    eventSource: null,\n    value: [],\n    valueBounds: []\n  });\n  stateRef.current.value = value;\n  stateRef.current.valueBounds = valueBounds;\n  var reversedValue = value.map(function (val) {\n    return max - val + min;\n  });\n  var thumbValues = isReversed ? reversedValue : value;\n  var thumbPercents = thumbValues.map(function (val) {\n    return valueToPercent(val, min, max);\n  });\n  var isVertical = orientation === \"vertical\";\n  var trackRef = useRef(null);\n  var rootRef = useRef(null);\n  var thumbRects = useSizes({\n    getNodes: function getNodes() {\n      var rootNode = rootRef.current;\n      var thumbNodes = rootNode == null ? void 0 : rootNode.querySelectorAll(\"[role=slider]\");\n      return thumbNodes ? Array.from(thumbNodes) : [];\n    }\n  });\n  var reactId = useId();\n  var uuid = idProp ?? reactId;\n  var ids = getIds(uuid);\n  var getValueFromPointer = useCallback(function (event) {\n    var _a;\n    if (!trackRef.current) return;\n    stateRef.current.eventSource = \"pointer\";\n    var rect = trackRef.current.getBoundingClientRect();\n    var _ref = ((_a = event.touches) == null ? void 0 : _a[0]) ?? event,\n      clientX = _ref.clientX,\n      clientY = _ref.clientY;\n    var diff = isVertical ? rect.bottom - clientY : clientX - rect.left;\n    var length = isVertical ? rect.height : rect.width;\n    var percent = diff / length;\n    if (isReversed) percent = 1 - percent;\n    return percentToValue(percent, min, max);\n  }, [isVertical, isReversed, max, min]);\n  var tenSteps = (max - min) / 10;\n  var oneStep = step || (max - min) / 100;\n  var actions = useMemo(function () {\n    return {\n      setValueAtIndex: function setValueAtIndex(index, val) {\n        if (!isInteractive) return;\n        var bounds = stateRef.current.valueBounds[index];\n        val = parseFloat(roundValueToStep(val, bounds.min, oneStep));\n        val = clampValue(val, bounds.min, bounds.max);\n        var next = _toConsumableArray(stateRef.current.value);\n        next[index] = val;\n        setValue(next);\n      },\n      setActiveIndex: setActiveIndex,\n      stepUp: function stepUp(index) {\n        var step2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : oneStep;\n        var valueAtIndex = stateRef.current.value[index];\n        var next = isReversed ? valueAtIndex - step2 : valueAtIndex + step2;\n        actions.setValueAtIndex(index, next);\n      },\n      stepDown: function stepDown(index) {\n        var step2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : oneStep;\n        var valueAtIndex = stateRef.current.value[index];\n        var next = isReversed ? valueAtIndex + step2 : valueAtIndex - step2;\n        actions.setValueAtIndex(index, next);\n      },\n      reset: function reset() {\n        setValue(initialValue.current);\n      }\n    };\n  }, [oneStep, isReversed, setValue, isInteractive]);\n  var onKeyDown = useCallback(function (event) {\n    var eventKey = event.key;\n    var keyMap = {\n      ArrowRight: function ArrowRight() {\n        return actions.stepUp(activeIndex);\n      },\n      ArrowUp: function ArrowUp() {\n        return actions.stepUp(activeIndex);\n      },\n      ArrowLeft: function ArrowLeft() {\n        return actions.stepDown(activeIndex);\n      },\n      ArrowDown: function ArrowDown() {\n        return actions.stepDown(activeIndex);\n      },\n      PageUp: function PageUp() {\n        return actions.stepUp(activeIndex, tenSteps);\n      },\n      PageDown: function PageDown() {\n        return actions.stepDown(activeIndex, tenSteps);\n      },\n      Home: function Home() {\n        var value2 = valueBounds[activeIndex].min;\n        actions.setValueAtIndex(activeIndex, value2);\n      },\n      End: function End() {\n        var value2 = valueBounds[activeIndex].max;\n        actions.setValueAtIndex(activeIndex, value2);\n      }\n    };\n    var action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      stateRef.current.eventSource = \"keyboard\";\n    }\n  }, [actions, activeIndex, tenSteps, valueBounds]);\n  var _useMemo = useMemo(function () {\n      return getStyles({\n        isReversed: isReversed,\n        orientation: orientation,\n        thumbRects: thumbRects,\n        thumbPercents: thumbPercents\n      });\n    }, [isReversed, orientation, thumbPercents, thumbRects]),\n    getThumbStyle = _useMemo.getThumbStyle,\n    rootStyle = _useMemo.rootStyle,\n    trackStyle = _useMemo.trackStyle,\n    innerTrackStyle = _useMemo.innerTrackStyle;\n  var focusThumb = useCallback(function (index) {\n    var _a;\n    var idx = index ?? activeIndex;\n    if (idx !== -1 && focusThumbOnChange) {\n      var id = ids.getThumb(idx);\n      var thumb = (_a = rootRef.current) == null ? void 0 : _a.ownerDocument.getElementById(id);\n      if (thumb) {\n        setTimeout(function () {\n          return thumb.focus();\n        });\n      }\n    }\n  }, [focusThumbOnChange, activeIndex, ids]);\n  useUpdateEffect(function () {\n    if (stateRef.current.eventSource === \"keyboard\") {\n      onChangeEnd == null ? void 0 : onChangeEnd(stateRef.current.value);\n    }\n  }, [value, onChangeEnd]);\n  var _onPanSessionStart = function onPanSessionStart(event) {\n    var pointValue = getValueFromPointer(event) || 0;\n    var distances = stateRef.current.value.map(function (val) {\n      return Math.abs(val - pointValue);\n    });\n    var closest = Math.min.apply(Math, _toConsumableArray(distances));\n    var index = distances.indexOf(closest);\n    var thumbsAtPosition = distances.filter(function (distance) {\n      return distance === closest;\n    });\n    var isThumbStacked = thumbsAtPosition.length > 1;\n    if (isThumbStacked && pointValue > stateRef.current.value[index]) {\n      index = index + thumbsAtPosition.length - 1;\n    }\n    setActiveIndex(index);\n    actions.setValueAtIndex(index, pointValue);\n    focusThumb(index);\n  };\n  var _onPan = function onPan(event) {\n    if (activeIndex == -1) return;\n    var pointValue = getValueFromPointer(event) || 0;\n    setActiveIndex(activeIndex);\n    actions.setValueAtIndex(activeIndex, pointValue);\n    focusThumb(activeIndex);\n  };\n  usePanEvent(rootRef, {\n    onPanSessionStart: function onPanSessionStart(event) {\n      if (!isInteractive) return;\n      setDragging(true);\n      _onPanSessionStart(event);\n      onChangeStart == null ? void 0 : onChangeStart(stateRef.current.value);\n    },\n    onPanSessionEnd: function onPanSessionEnd() {\n      if (!isInteractive) return;\n      setDragging(false);\n      onChangeEnd == null ? void 0 : onChangeEnd(stateRef.current.value);\n    },\n    onPan: function onPan(event) {\n      if (!isInteractive) return;\n      _onPan(event);\n    }\n  });\n  var getRootProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, htmlProps, {\n      id: ids.root,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: _objectSpread({}, props2.style, rootStyle)\n    });\n  }, [htmlProps, isDisabled, isFocused, rootStyle, ids]);\n  var getTrackProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: mergeRefs(ref, trackRef),\n      id: ids.track,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: _objectSpread({}, props2.style, trackStyle)\n    });\n  }, [isDisabled, trackStyle, ids]);\n  var getInnerTrackProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: ref,\n      id: ids.innerTrack,\n      style: _objectSpread({}, props2.style, innerTrackStyle)\n    });\n  }, [innerTrackStyle, ids]);\n  var getThumbProps = useCallback(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var index = props2.index,\n      rest = _objectWithoutProperties(props2, [\"index\"]);\n    var valueAtIndex = value[index];\n    if (valueAtIndex == null) {\n      throw new TypeError(\"[range-slider > thumb] Cannot find value at index `\".concat(index, \"`. The `value` or `defaultValue` length is : \").concat(value.length));\n    }\n    var bounds = valueBounds[index];\n    return _objectSpread({}, rest, {\n      ref: ref,\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : void 0,\n      id: ids.getThumb(index),\n      \"data-active\": dataAttr(isDragging && activeIndex === index),\n      \"aria-valuetext\": (getAriaValueText == null ? void 0 : getAriaValueText(valueAtIndex)) ?? (ariaValueText == null ? void 0 : ariaValueText[index]),\n      \"aria-valuemin\": bounds.min,\n      \"aria-valuemax\": bounds.max,\n      \"aria-valuenow\": valueAtIndex,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel == null ? void 0 : ariaLabel[index],\n      \"aria-labelledby\": (ariaLabel == null ? void 0 : ariaLabel[index]) ? void 0 : ariaLabelledBy == null ? void 0 : ariaLabelledBy[index],\n      style: _objectSpread({}, props2.style, getThumbStyle(index)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, function () {\n        setFocused(true);\n        setActiveIndex(index);\n      }),\n      onBlur: callAllHandlers(props2.onBlur, function () {\n        setFocused(false);\n        setActiveIndex(-1);\n      })\n    });\n  }, [ids, value, valueBounds, isInteractive, isDragging, activeIndex, getAriaValueText, ariaValueText, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown, setFocused]);\n  var getOutputProps = useCallback(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: ref,\n      id: ids.output,\n      htmlFor: value.map(function (v, i) {\n        return ids.getThumb(i);\n      }).join(\" \"),\n      \"aria-live\": \"off\"\n    });\n  }, [ids, value]);\n  var getMarkerProps = useCallback(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var v = props2.value,\n      rest = _objectWithoutProperties(props2, [\"value\"]);\n    var isInRange = !(v < min || v > max);\n    var isHighlighted = v >= value[0] && v <= value[value.length - 1];\n    var percent = valueToPercent(v, min, max);\n    percent = isReversed ? 100 - percent : percent;\n    var markerStyle = _objectSpread({\n      position: \"absolute\",\n      pointerEvents: \"none\"\n    }, orient({\n      orientation: orientation,\n      vertical: {\n        bottom: \"\".concat(percent, \"%\")\n      },\n      horizontal: {\n        left: \"\".concat(percent, \"%\")\n      }\n    }));\n    return _objectSpread({}, rest, {\n      ref: ref,\n      id: ids.getMarker(props2.value),\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: _objectSpread({}, props2.style, markerStyle)\n    });\n  }, [isDisabled, isReversed, max, min, orientation, value, ids]);\n  var getInputProps = useCallback(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var index = props2.index,\n      rest = _objectWithoutProperties(props2, [\"index\"]);\n    return _objectSpread({}, rest, {\n      ref: ref,\n      id: ids.getInput(index),\n      type: \"hidden\",\n      value: value[index],\n      name: Array.isArray(name) ? name[index] : \"\".concat(name, \"-\").concat(index)\n    });\n  }, [name, value, ids]);\n  return {\n    state: {\n      value: value,\n      isFocused: isFocused,\n      isDragging: isDragging,\n      getThumbPercent: function getThumbPercent(index) {\n        return thumbPercents[index];\n      },\n      getThumbMinValue: function getThumbMinValue(index) {\n        return valueBounds[index].min;\n      },\n      getThumbMaxValue: function getThumbMaxValue(index) {\n        return valueBounds[index].max;\n      }\n    },\n    actions: actions,\n    getRootProps: getRootProps,\n    getTrackProps: getTrackProps,\n    getInnerTrackProps: getInnerTrackProps,\n    getThumbProps: getThumbProps,\n    getMarkerProps: getMarkerProps,\n    getInputProps: getInputProps,\n    getOutputProps: getOutputProps\n  };\n}\nfunction getValueBounds(arr, min, max, spacing) {\n  return arr.map(function (v, i) {\n    var _min = i === 0 ? min : arr[i - 1] + spacing;\n    var _max = i === arr.length - 1 ? max : arr[i + 1] - spacing;\n    return {\n      min: _min,\n      max: _max\n    };\n  });\n}\n\n// src/range-slider.tsx\nvar _createContext = createContext({\n    name: \"SliderContext\",\n    errorMessage: \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <RangeSlider />\"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  RangeSliderProvider = _createContext2[0],\n  useRangeSliderContext = _createContext2[1];\nvar _createContext3 = createContext({\n    name: \"RangeSliderStylesContext\",\n    errorMessage: \"useRangeSliderStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<RangeSlider />\\\" \"\n  }),\n  _createContext4 = _slicedToArray(_createContext3, 2),\n  RangeSliderStylesProvider = _createContext4[0],\n  useRangeSliderStyles = _createContext4[1];\nvar RangeSlider = forwardRef(function RangeSlider2(props, ref) {\n  var styles = useMultiStyleConfig(\"Slider\", props);\n  var ownProps = omitThemingProps(props);\n  var _useTheme = useTheme(),\n    direction = _useTheme.direction;\n  ownProps.direction = direction;\n  var _useRangeSlider = useRangeSlider(ownProps),\n    getRootProps = _useRangeSlider.getRootProps,\n    context = _objectWithoutProperties(_useRangeSlider, [\"getRootProps\"]);\n  var ctx = useMemo2(function () {\n    return _objectSpread({}, context, {\n      name: props.name\n    });\n  }, [context, props.name]);\n  return /* @__PURE__ */React.createElement(RangeSliderProvider, {\n    value: ctx\n  }, /* @__PURE__ */React.createElement(RangeSliderStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */React.createElement(chakra.div, _objectSpread({}, getRootProps({}, ref), {\n    className: \"chakra-slider\",\n    __css: styles.container\n  }), props.children)));\n});\nRangeSlider.defaultProps = {\n  orientation: \"horizontal\"\n};\nRangeSlider.displayName = \"RangeSlider\";\nvar RangeSliderThumb = forwardRef(function RangeSliderThumb2(props, ref) {\n  var _useRangeSliderContex = useRangeSliderContext(),\n    getThumbProps = _useRangeSliderContex.getThumbProps,\n    getInputProps = _useRangeSliderContex.getInputProps,\n    name = _useRangeSliderContex.name;\n  var styles = useRangeSliderStyles();\n  var thumbProps = getThumbProps(props, ref);\n  return /* @__PURE__ */React.createElement(chakra.div, _objectSpread({}, thumbProps, {\n    className: cx(\"chakra-slider__thumb\", props.className),\n    __css: styles.thumb\n  }), thumbProps.children, name && /* @__PURE__ */React.createElement(\"input\", _objectSpread({}, getInputProps({\n    index: props.index\n  }))));\n});\nRangeSliderThumb.displayName = \"RangeSliderThumb\";\nvar RangeSliderTrack = forwardRef(function RangeSliderTrack2(props, ref) {\n  var _useRangeSliderContex2 = useRangeSliderContext(),\n    getTrackProps = _useRangeSliderContex2.getTrackProps;\n  var styles = useRangeSliderStyles();\n  var trackProps = getTrackProps(props, ref);\n  return /* @__PURE__ */React.createElement(chakra.div, _objectSpread({}, trackProps, {\n    className: cx(\"chakra-slider__track\", props.className),\n    __css: styles.track,\n    \"data-testid\": \"chakra-range-slider-track\"\n  }));\n});\nRangeSliderTrack.displayName = \"RangeSliderTrack\";\nvar RangeSliderFilledTrack = forwardRef(function RangeSliderFilledTrack2(props, ref) {\n  var _useRangeSliderContex3 = useRangeSliderContext(),\n    getInnerTrackProps = _useRangeSliderContex3.getInnerTrackProps;\n  var styles = useRangeSliderStyles();\n  var trackProps = getInnerTrackProps(props, ref);\n  return /* @__PURE__ */React.createElement(chakra.div, _objectSpread({}, trackProps, {\n    className: \"chakra-slider__filled-track\",\n    __css: styles.filledTrack\n  }));\n});\nRangeSliderFilledTrack.displayName = \"RangeSliderFilledTrack\";\nvar RangeSliderMark = forwardRef(function RangeSliderMark2(props, ref) {\n  var _useRangeSliderContex4 = useRangeSliderContext(),\n    getMarkerProps = _useRangeSliderContex4.getMarkerProps;\n  var markProps = getMarkerProps(props, ref);\n  return /* @__PURE__ */React.createElement(chakra.div, _objectSpread({}, markProps, {\n    className: cx(\"chakra-slider__marker\", props.className)\n  }));\n});\nRangeSliderMark.displayName = \"RangeSliderMark\";\n\n// src/slider.tsx\ninit_react_shim();\nimport { createContext as createContext2 } from \"@chakra-ui/react-context\";\nimport { chakra as chakra2, forwardRef as forwardRef2, omitThemingProps as omitThemingProps2, useMultiStyleConfig as useMultiStyleConfig2, useTheme as useTheme2 } from \"@chakra-ui/system\";\n\n// src/use-slider.ts\ninit_react_shim();\nimport { usePanEvent as usePanEvent2 } from \"@chakra-ui/react-use-pan-event\";\nimport { useCallbackRef as useCallbackRef2 } from \"@chakra-ui/react-use-callback-ref\";\nimport { useUpdateEffect as useUpdateEffect2 } from \"@chakra-ui/react-use-update-effect\";\nimport { useControllableState as useControllableState2 } from \"@chakra-ui/react-use-controllable-state\";\nimport { useSize } from \"@chakra-ui/react-use-size\";\nimport { mergeRefs as mergeRefs2 } from \"@chakra-ui/react-use-merge-refs\";\nimport { useLatestRef } from \"@chakra-ui/react-use-latest-ref\";\nimport { clampValue as clampValue2, percentToValue as percentToValue2, roundValueToStep as roundValueToStep2, valueToPercent as valueToPercent2 } from \"@chakra-ui/number-utils\";\nimport { useCallback as useCallback2, useMemo as useMemo3, useRef as useRef2, useId as useId2, useState as useState2 } from \"react\";\nfunction useSlider(props) {\n  var _props$min2 = props.min,\n    min = _props$min2 === void 0 ? 0 : _props$min2,\n    _props$max2 = props.max,\n    max = _props$max2 === void 0 ? 100 : _props$max2,\n    onChange = props.onChange,\n    valueProp = props.value,\n    defaultValue = props.defaultValue,\n    isReversedProp = props.isReversed,\n    _props$direction2 = props.direction,\n    direction = _props$direction2 === void 0 ? \"ltr\" : _props$direction2,\n    _props$orientation2 = props.orientation,\n    orientation = _props$orientation2 === void 0 ? \"horizontal\" : _props$orientation2,\n    idProp = props.id,\n    isDisabled = props.isDisabled,\n    isReadOnly = props.isReadOnly,\n    onChangeStartProp = props.onChangeStart,\n    onChangeEndProp = props.onChangeEnd,\n    _props$step2 = props.step,\n    step = _props$step2 === void 0 ? 1 : _props$step2,\n    getAriaValueTextProp = props.getAriaValueText,\n    ariaValueText = props[\"aria-valuetext\"],\n    ariaLabel = props[\"aria-label\"],\n    ariaLabelledBy = props[\"aria-labelledby\"],\n    name = props.name,\n    _props$focusThumbOnCh2 = props.focusThumbOnChange,\n    focusThumbOnChange = _props$focusThumbOnCh2 === void 0 ? true : _props$focusThumbOnCh2,\n    htmlProps = _objectWithoutProperties(props, [\"min\", \"max\", \"onChange\", \"value\", \"defaultValue\", \"isReversed\", \"direction\", \"orientation\", \"id\", \"isDisabled\", \"isReadOnly\", \"onChangeStart\", \"onChangeEnd\", \"step\", \"getAriaValueText\", \"aria-valuetext\", \"aria-label\", \"aria-labelledby\", \"name\", \"focusThumbOnChange\"]);\n  var onChangeStart = useCallbackRef2(onChangeStartProp);\n  var onChangeEnd = useCallbackRef2(onChangeEndProp);\n  var getAriaValueText = useCallbackRef2(getAriaValueTextProp);\n  var isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction: direction,\n    orientation: orientation\n  });\n  var _useControllableState3 = useControllableState2({\n      value: valueProp,\n      defaultValue: defaultValue ?? getDefaultValue(min, max),\n      onChange: onChange\n    }),\n    _useControllableState4 = _slicedToArray(_useControllableState3, 2),\n    computedValue = _useControllableState4[0],\n    setValue = _useControllableState4[1];\n  var _useState7 = useState2(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isDragging = _useState8[0],\n    setDragging = _useState8[1];\n  var _useState9 = useState2(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isFocused = _useState10[0],\n    setFocused = _useState10[1];\n  var isInteractive = !(isDisabled || isReadOnly);\n  var tenSteps = (max - min) / 10;\n  var oneStep = step || (max - min) / 100;\n  var value = clampValue2(computedValue, min, max);\n  var reversedValue = max - value + min;\n  var trackValue = isReversed ? reversedValue : value;\n  var thumbPercent = valueToPercent2(trackValue, min, max);\n  var isVertical = orientation === \"vertical\";\n  var stateRef = useLatestRef({\n    min: min,\n    max: max,\n    step: step,\n    isDisabled: isDisabled,\n    value: value,\n    isInteractive: isInteractive,\n    isReversed: isReversed,\n    isVertical: isVertical,\n    eventSource: null,\n    focusThumbOnChange: focusThumbOnChange,\n    orientation: orientation\n  });\n  var trackRef = useRef2(null);\n  var thumbRef = useRef2(null);\n  var rootRef = useRef2(null);\n  var reactId = useId2();\n  var uuid = idProp ?? reactId;\n  var thumbId = \"slider-thumb-\".concat(uuid),\n    trackId = \"slider-track-\".concat(uuid);\n  var getValueFromPointer = useCallback2(function (event) {\n    var _a;\n    if (!trackRef.current) return;\n    var state = stateRef.current;\n    state.eventSource = \"pointer\";\n    var trackRect = trackRef.current.getBoundingClientRect();\n    var _ref2 = ((_a = event.touches) == null ? void 0 : _a[0]) ?? event,\n      clientX = _ref2.clientX,\n      clientY = _ref2.clientY;\n    var diff = isVertical ? trackRect.bottom - clientY : clientX - trackRect.left;\n    var length = isVertical ? trackRect.height : trackRect.width;\n    var percent = diff / length;\n    if (isReversed) {\n      percent = 1 - percent;\n    }\n    var nextValue = percentToValue2(percent, state.min, state.max);\n    if (state.step) {\n      nextValue = parseFloat(roundValueToStep2(nextValue, state.min, state.step));\n    }\n    nextValue = clampValue2(nextValue, state.min, state.max);\n    return nextValue;\n  }, [isVertical, isReversed, stateRef]);\n  var constrain = useCallback2(function (value2) {\n    var state = stateRef.current;\n    if (!state.isInteractive) return;\n    value2 = parseFloat(roundValueToStep2(value2, state.min, oneStep));\n    value2 = clampValue2(value2, state.min, state.max);\n    setValue(value2);\n  }, [oneStep, setValue, stateRef]);\n  var actions = useMemo3(function () {\n    return {\n      stepUp: function stepUp() {\n        var step2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : oneStep;\n        var next = isReversed ? value - step2 : value + step2;\n        constrain(next);\n      },\n      stepDown: function stepDown() {\n        var step2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : oneStep;\n        var next = isReversed ? value + step2 : value - step2;\n        constrain(next);\n      },\n      reset: function reset() {\n        constrain(defaultValue || 0);\n      },\n      stepTo: function stepTo(value2) {\n        constrain(value2);\n      }\n    };\n  }, [constrain, isReversed, value, oneStep, defaultValue]);\n  var onKeyDown = useCallback2(function (event) {\n    var state = stateRef.current;\n    var keyMap = {\n      ArrowRight: function ArrowRight() {\n        return actions.stepUp();\n      },\n      ArrowUp: function ArrowUp() {\n        return actions.stepUp();\n      },\n      ArrowLeft: function ArrowLeft() {\n        return actions.stepDown();\n      },\n      ArrowDown: function ArrowDown() {\n        return actions.stepDown();\n      },\n      PageUp: function PageUp() {\n        return actions.stepUp(tenSteps);\n      },\n      PageDown: function PageDown() {\n        return actions.stepDown(tenSteps);\n      },\n      Home: function Home() {\n        return constrain(state.min);\n      },\n      End: function End() {\n        return constrain(state.max);\n      }\n    };\n    var action = keyMap[event.key];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      state.eventSource = \"keyboard\";\n    }\n  }, [actions, constrain, tenSteps, stateRef]);\n  var valueText = (getAriaValueText == null ? void 0 : getAriaValueText(value)) ?? ariaValueText;\n  var thumbSize = useSize(thumbRef);\n  var _useMemo2 = useMemo3(function () {\n      var state = stateRef.current;\n      var thumbRect = thumbSize ?? {\n        width: 0,\n        height: 0\n      };\n      return getStyles({\n        isReversed: isReversed,\n        orientation: state.orientation,\n        thumbRects: [thumbRect],\n        thumbPercents: [thumbPercent]\n      });\n    }, [isReversed, thumbSize, thumbPercent, stateRef]),\n    getThumbStyle = _useMemo2.getThumbStyle,\n    rootStyle = _useMemo2.rootStyle,\n    trackStyle = _useMemo2.trackStyle,\n    innerTrackStyle = _useMemo2.innerTrackStyle;\n  var focusThumb = useCallback2(function () {\n    var state = stateRef.current;\n    if (state.focusThumbOnChange) {\n      setTimeout(function () {\n        var _a;\n        return (_a = thumbRef.current) == null ? void 0 : _a.focus();\n      });\n    }\n  }, [stateRef]);\n  useUpdateEffect2(function () {\n    var state = stateRef.current;\n    focusThumb();\n    if (state.eventSource === \"keyboard\") {\n      onChangeEnd == null ? void 0 : onChangeEnd(state.value);\n    }\n  }, [value, onChangeEnd]);\n  function setValueFromPointer(event) {\n    var nextValue = getValueFromPointer(event);\n    if (nextValue != null && nextValue !== stateRef.current.value) {\n      setValue(nextValue);\n    }\n  }\n  usePanEvent2(rootRef, {\n    onPanSessionStart: function onPanSessionStart(event) {\n      var state = stateRef.current;\n      if (!state.isInteractive) return;\n      setDragging(true);\n      focusThumb();\n      setValueFromPointer(event);\n      onChangeStart == null ? void 0 : onChangeStart(state.value);\n    },\n    onPanSessionEnd: function onPanSessionEnd() {\n      var state = stateRef.current;\n      if (!state.isInteractive) return;\n      setDragging(false);\n      onChangeEnd == null ? void 0 : onChangeEnd(state.value);\n    },\n    onPan: function onPan(event) {\n      var state = stateRef.current;\n      if (!state.isInteractive) return;\n      setValueFromPointer(event);\n    }\n  });\n  var getRootProps = useCallback2(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, htmlProps, {\n      ref: mergeRefs2(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: _objectSpread({}, props2.style, rootStyle)\n    });\n  }, [htmlProps, isDisabled, isFocused, rootStyle]);\n  var getTrackProps = useCallback2(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: mergeRefs2(ref, trackRef),\n      id: trackId,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: _objectSpread({}, props2.style, trackStyle)\n    });\n  }, [isDisabled, trackId, trackStyle]);\n  var getInnerTrackProps = useCallback2(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: ref,\n      style: _objectSpread({}, props2.style, innerTrackStyle)\n    });\n  }, [innerTrackStyle]);\n  var getThumbProps = useCallback2(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: mergeRefs2(ref, thumbRef),\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : void 0,\n      id: thumbId,\n      \"data-active\": dataAttr(isDragging),\n      \"aria-valuetext\": valueText,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabel ? void 0 : ariaLabelledBy,\n      style: _objectSpread({}, props2.style, getThumbStyle(0)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, function () {\n        return setFocused(true);\n      }),\n      onBlur: callAllHandlers(props2.onBlur, function () {\n        return setFocused(false);\n      })\n    });\n  }, [isInteractive, thumbId, isDragging, valueText, min, max, value, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown]);\n  var getMarkerProps = useCallback2(function (props2) {\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var isInRange = !(props2.value < min || props2.value > max);\n    var isHighlighted = value >= props2.value;\n    var markerPercent = valueToPercent2(props2.value, min, max);\n    var markerStyle = _objectSpread({\n      position: \"absolute\",\n      pointerEvents: \"none\"\n    }, orient2({\n      orientation: orientation,\n      vertical: {\n        bottom: isReversed ? \"\".concat(100 - markerPercent, \"%\") : \"\".concat(markerPercent, \"%\")\n      },\n      horizontal: {\n        left: isReversed ? \"\".concat(100 - markerPercent, \"%\") : \"\".concat(markerPercent, \"%\")\n      }\n    }));\n    return _objectSpread({}, props2, {\n      ref: ref,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: _objectSpread({}, props2.style, markerStyle)\n    });\n  }, [isDisabled, isReversed, max, min, orientation, value]);\n  var getInputProps = useCallback2(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({}, props2, {\n      ref: ref,\n      type: \"hidden\",\n      value: value,\n      name: name\n    });\n  }, [name, value]);\n  return {\n    state: {\n      value: value,\n      isFocused: isFocused,\n      isDragging: isDragging\n    },\n    actions: actions,\n    getRootProps: getRootProps,\n    getTrackProps: getTrackProps,\n    getInnerTrackProps: getInnerTrackProps,\n    getThumbProps: getThumbProps,\n    getMarkerProps: getMarkerProps,\n    getInputProps: getInputProps\n  };\n}\nfunction orient2(options) {\n  var orientation = options.orientation,\n    vertical = options.vertical,\n    horizontal = options.horizontal;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nfunction getDefaultValue(min, max) {\n  return max < min ? min : min + (max - min) / 2;\n}\n\n// src/slider.tsx\nvar _createContext5 = createContext2({\n    name: \"SliderContext\",\n    hookName: \"useSliderContext\",\n    providerName: \"<Slider />\"\n  }),\n  _createContext6 = _slicedToArray(_createContext5, 2),\n  SliderProvider = _createContext6[0],\n  useSliderContext = _createContext6[1];\nvar _createContext7 = createContext2({\n    name: \"SliderStylesContext\",\n    hookName: \"useSliderStyles\",\n    providerName: \"<Slider />\"\n  }),\n  _createContext8 = _slicedToArray(_createContext7, 2),\n  SliderStylesProvider = _createContext8[0],\n  useSliderStyles = _createContext8[1];\nvar Slider = forwardRef2(function (props, ref) {\n  var styles = useMultiStyleConfig2(\"Slider\", props);\n  var ownProps = omitThemingProps2(props);\n  var _useTheme2 = useTheme2(),\n    direction = _useTheme2.direction;\n  ownProps.direction = direction;\n  var _useSlider = useSlider(ownProps),\n    getInputProps = _useSlider.getInputProps,\n    getRootProps = _useSlider.getRootProps,\n    context = _objectWithoutProperties(_useSlider, [\"getInputProps\", \"getRootProps\"]);\n  var rootProps = getRootProps();\n  var inputProps = getInputProps({}, ref);\n  return /* @__PURE__ */React.createElement(SliderProvider, {\n    value: context\n  }, /* @__PURE__ */React.createElement(SliderStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */React.createElement(chakra2.div, _objectSpread({}, rootProps, {\n    className: cx(\"chakra-slider\", props.className),\n    __css: styles.container\n  }), props.children, /* @__PURE__ */React.createElement(\"input\", _objectSpread({}, inputProps)))));\n});\nSlider.defaultProps = {\n  orientation: \"horizontal\"\n};\nSlider.displayName = \"Slider\";\nvar SliderThumb = forwardRef2(function (props, ref) {\n  var _useSliderContext = useSliderContext(),\n    getThumbProps = _useSliderContext.getThumbProps;\n  var styles = useSliderStyles();\n  var thumbProps = getThumbProps(props, ref);\n  return /* @__PURE__ */React.createElement(chakra2.div, _objectSpread({}, thumbProps, {\n    className: cx(\"chakra-slider__thumb\", props.className),\n    __css: styles.thumb\n  }));\n});\nSliderThumb.displayName = \"SliderThumb\";\nvar SliderTrack = forwardRef2(function (props, ref) {\n  var _useSliderContext2 = useSliderContext(),\n    getTrackProps = _useSliderContext2.getTrackProps;\n  var styles = useSliderStyles();\n  var trackProps = getTrackProps(props, ref);\n  return /* @__PURE__ */React.createElement(chakra2.div, _objectSpread({}, trackProps, {\n    className: cx(\"chakra-slider__track\", props.className),\n    __css: styles.track\n  }));\n});\nSliderTrack.displayName = \"SliderTrack\";\nvar SliderFilledTrack = forwardRef2(function (props, ref) {\n  var _useSliderContext3 = useSliderContext(),\n    getInnerTrackProps = _useSliderContext3.getInnerTrackProps;\n  var styles = useSliderStyles();\n  var trackProps = getInnerTrackProps(props, ref);\n  return /* @__PURE__ */React.createElement(chakra2.div, _objectSpread({}, trackProps, {\n    className: cx(\"chakra-slider__filled-track\", props.className),\n    __css: styles.filledTrack\n  }));\n});\nSliderFilledTrack.displayName = \"SliderFilledTrack\";\nvar SliderMark = forwardRef2(function (props, ref) {\n  var _useSliderContext4 = useSliderContext(),\n    getMarkerProps = _useSliderContext4.getMarkerProps;\n  var styles = useSliderStyles();\n  var markProps = getMarkerProps(props, ref);\n  return /* @__PURE__ */React.createElement(chakra2.div, _objectSpread({}, markProps, {\n    className: cx(\"chakra-slider__marker\", props.className),\n    __css: styles.mark\n  }));\n});\nSliderMark.displayName = \"SliderMark\";\nexport { RangeSlider, RangeSliderFilledTrack, RangeSliderMark, RangeSliderProvider, RangeSliderThumb, RangeSliderTrack, Slider, SliderFilledTrack, SliderMark, SliderProvider, SliderThumb, SliderTrack, useRangeSlider, useRangeSliderContext, useRangeSliderStyles, useSlider, useSliderContext, useSliderStyles };","map":null,"metadata":{},"sourceType":"module"}
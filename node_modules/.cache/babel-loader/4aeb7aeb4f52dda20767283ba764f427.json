{"ast":null,"code":"import _objectSpread from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n// ../../../react-shim.js\nimport React from \"react\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  return classNames.filter(Boolean).join(\" \");\n};\n\n// src/breadcrumb.tsx\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cloneElement } from \"react\";\n\n// src/breadcrumb-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar _createContext = createContext({\n    name: \"BreadcrumbStylesContext\",\n    errorMessage: \"useBreadcrumbStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<Breadcrumb />\\\" \"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  BreadcrumbStylesProvider = _createContext2[0],\n  useBreadcrumbStyles = _createContext2[1]; // src/breadcrumb.tsx\nvar Breadcrumb = forwardRef(function Breadcrumb2(props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n  var children = ownProps.children,\n    _ownProps$spacing = ownProps.spacing,\n    spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n    _ownProps$separator = ownProps.separator,\n    separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n    className = ownProps.className,\n    listProps = ownProps.listProps,\n    rest = _objectWithoutProperties(ownProps, [\"children\", \"spacing\", \"separator\", \"className\", \"listProps\"]);\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n  var _className = cx(\"chakra-breadcrumb\", className);\n  return /* @__PURE__ */React.createElement(chakra.nav, _objectSpread({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /* @__PURE__ */React.createElement(BreadcrumbStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */React.createElement(chakra.ol, _objectSpread({\n    className: \"chakra-breadcrumb__list\"\n  }, listProps, {\n    __css: _objectSpread({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.list)\n  }), clones)));\n});\nBreadcrumb.displayName = \"Breadcrumb\";\n\n// src/breadcrumb-item.tsx\nimport { chakra as chakra4, forwardRef as forwardRef4 } from \"@chakra-ui/system\";\nimport { getValidChildren as getValidChildren2 } from \"@chakra-ui/react-children-utils\";\n\n// src/breadcrumb-separator.tsx\nimport { chakra as chakra2, forwardRef as forwardRef2 } from \"@chakra-ui/system\";\nvar BreadcrumbSeparator = forwardRef2(function BreadcrumbSeparator2(props, ref) {\n  var spacing = props.spacing,\n    rest = _objectWithoutProperties(props, [\"spacing\"]);\n  var styles = useBreadcrumbStyles();\n  var separatorStyles = _objectSpread({\n    mx: spacing\n  }, styles.separator);\n  return /* @__PURE__ */React.createElement(chakra2.span, _objectSpread({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\n// src/breadcrumb-link.tsx\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar BreadcrumbLink = forwardRef3(function BreadcrumbLink2(props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n    as = props.as,\n    className = props.className,\n    href = props.href,\n    rest = _objectWithoutProperties(props, [\"isCurrentPage\", \"as\", \"className\", \"href\"]);\n  var styles = useBreadcrumbStyles();\n  var sharedProps = _objectSpread({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n  if (isCurrentPage) {\n    return /* @__PURE__ */React.createElement(chakra3.span, _objectSpread({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n  return /* @__PURE__ */React.createElement(chakra3.a, _objectSpread({\n    __css: styles.link,\n    href: href\n  }, sharedProps));\n});\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\n// src/breadcrumb-item.tsx\nimport { cloneElement as cloneElement2 } from \"react\";\nvar BreadcrumbItem = forwardRef4(function BreadcrumbItem2(props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n    separator = props.separator,\n    isLastChild = props.isLastChild,\n    spacing = props.spacing,\n    children = props.children,\n    className = props.className,\n    rest = _objectWithoutProperties(props, [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"]);\n  var validChildren = getValidChildren2(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return cloneElement2(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n    if (child.type === BreadcrumbSeparator) {\n      return cloneElement2(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n    return child;\n  });\n  var styles = useBreadcrumbStyles();\n  var itemStyles = _objectSpread({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n  return /* @__PURE__ */React.createElement(chakra4.li, _objectSpread({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /* @__PURE__ */React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\nexport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator, useBreadcrumbStyles };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectWithoutProperties from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n// ../../../react-shim.js\nimport React from \"react\";\n\n// src/number-input.tsx\nimport { useFormControlProps } from \"@chakra-ui/form-control\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  return classNames.filter(Boolean).join(\" \");\n};\nvar ariaAttr = function ariaAttr(condition) {\n  return condition ? true : void 0;\n};\nfunction callAllHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n  return function func(event) {\n    fns.some(function (fn) {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\n\n// src/number-input.tsx\nimport { useMemo as useMemo2 } from \"react\";\n\n// src/icons.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nvar TriangleDownIcon = function TriangleDownIcon(props) {\n  return /* @__PURE__ */React.createElement(Icon, _objectSpread({\n    viewBox: \"0 0 24 24\"\n  }, props), /* @__PURE__ */React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z\"\n  }));\n};\nvar TriangleUpIcon = function TriangleUpIcon(props) {\n  return /* @__PURE__ */React.createElement(Icon, _objectSpread({\n    viewBox: \"0 0 24 24\"\n  }, props), /* @__PURE__ */React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z\"\n  }));\n};\n\n// src/use-number-input.ts\nimport { useCounter } from \"@chakra-ui/counter\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback as useCallback2, useMemo, useRef as useRef2, useState as useState2 } from \"react\";\n\n// src/use-attr-observer.ts\nimport { useEffect } from \"react\";\nfunction useAttributeObserver(ref, attributes, fn, enabled) {\n  useEffect(function () {\n    if (!ref.current || !enabled) return;\n    var win = ref.current.ownerDocument.defaultView ?? window;\n    var attrs = Array.isArray(attributes) ? attributes : [attributes];\n    var obs = new win.MutationObserver(function (changes) {\n      var _iterator = _createForOfIteratorHelper(changes),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var change = _step.value;\n          if (change.type === \"attributes\" && change.attributeName && attrs.includes(change.attributeName)) {\n            fn(change);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n    obs.observe(ref.current, {\n      attributes: true,\n      attributeFilter: attrs\n    });\n    return function () {\n      return obs.disconnect();\n    };\n  });\n}\n\n// src/use-spinner.ts\nimport { useInterval } from \"@chakra-ui/react-use-interval\";\nimport { useCallback, useEffect as useEffect2, useRef, useState } from \"react\";\nvar CONTINUOUS_CHANGE_INTERVAL = 50;\nvar CONTINUOUS_CHANGE_DELAY = 300;\nfunction useSpinner(increment, decrement) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSpinning = _useState2[0],\n    setIsSpinning = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    action = _useState4[0],\n    setAction = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    runOnce = _useState6[0],\n    setRunOnce = _useState6[1];\n  var timeoutRef = useRef(null);\n  var removeTimeout = function removeTimeout() {\n    return clearTimeout(timeoutRef.current);\n  };\n  useInterval(function () {\n    if (action === \"increment\") {\n      increment();\n    }\n    if (action === \"decrement\") {\n      decrement();\n    }\n  }, isSpinning ? CONTINUOUS_CHANGE_INTERVAL : null);\n  var up = useCallback(function () {\n    if (runOnce) {\n      increment();\n    }\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"increment\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [increment, runOnce]);\n  var down = useCallback(function () {\n    if (runOnce) {\n      decrement();\n    }\n    timeoutRef.current = setTimeout(function () {\n      setRunOnce(false);\n      setIsSpinning(true);\n      setAction(\"decrement\");\n    }, CONTINUOUS_CHANGE_DELAY);\n  }, [decrement, runOnce]);\n  var stop = useCallback(function () {\n    setRunOnce(true);\n    setIsSpinning(false);\n    removeTimeout();\n  }, []);\n  useEffect2(function () {\n    return function () {\n      return removeTimeout();\n    };\n  }, []);\n  return {\n    up: up,\n    down: down,\n    stop: stop,\n    isSpinning: isSpinning\n  };\n}\n\n// src/use-number-input.ts\nvar FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\nfunction isValidNumericKeyboardEvent(event, isValid) {\n  if (event.key == null) return true;\n  var isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n  var isSingleCharacterKey = event.key.length === 1;\n  if (!isSingleCharacterKey || isModifierKey) return true;\n  return isValid(event.key);\n}\nfunction useNumberInput() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$focusInputOnCh = props.focusInputOnChange,\n    focusInputOnChange = _props$focusInputOnCh === void 0 ? true : _props$focusInputOnCh,\n    _props$clampValueOnBl = props.clampValueOnBlur,\n    clampValueOnBlur = _props$clampValueOnBl === void 0 ? true : _props$clampValueOnBl,\n    _props$keepWithinRang = props.keepWithinRange,\n    keepWithinRange = _props$keepWithinRang === void 0 ? true : _props$keepWithinRang,\n    _props$min = props.min,\n    min = _props$min === void 0 ? Number.MIN_SAFE_INTEGER : _props$min,\n    _props$max = props.max,\n    max = _props$max === void 0 ? Number.MAX_SAFE_INTEGER : _props$max,\n    _props$step = props.step,\n    stepProp = _props$step === void 0 ? 1 : _props$step,\n    isReadOnly = props.isReadOnly,\n    isDisabled = props.isDisabled,\n    isRequired = props.isRequired,\n    isInvalid = props.isInvalid,\n    _props$pattern = props.pattern,\n    pattern = _props$pattern === void 0 ? \"[0-9]*(.[0-9]+)?\" : _props$pattern,\n    _props$inputMode = props.inputMode,\n    inputMode = _props$inputMode === void 0 ? \"decimal\" : _props$inputMode,\n    allowMouseWheel = props.allowMouseWheel,\n    id = props.id,\n    _ = props.onChange,\n    precision = props.precision,\n    name = props.name,\n    ariaDescBy = props[\"aria-describedby\"],\n    ariaLabel = props[\"aria-label\"],\n    ariaLabelledBy = props[\"aria-labelledby\"],\n    onFocusProp = props.onFocus,\n    onBlurProp = props.onBlur,\n    onInvalidProp = props.onInvalid,\n    getAriaValueTextProp = props.getAriaValueText,\n    isValidCharacterProp = props.isValidCharacter,\n    formatValue = props.format,\n    parseValue = props.parse,\n    htmlProps = _objectWithoutProperties(props, [\"focusInputOnChange\", \"clampValueOnBlur\", \"keepWithinRange\", \"min\", \"max\", \"step\", \"isReadOnly\", \"isDisabled\", \"isRequired\", \"isInvalid\", \"pattern\", \"inputMode\", \"allowMouseWheel\", \"id\", \"onChange\", \"precision\", \"name\", \"aria-describedby\", \"aria-label\", \"aria-labelledby\", \"onFocus\", \"onBlur\", \"onInvalid\", \"getAriaValueText\", \"isValidCharacter\", \"format\", \"parse\"]);\n  var onFocus = useCallbackRef(onFocusProp);\n  var onBlur = useCallbackRef(onBlurProp);\n  var onInvalid = useCallbackRef(onInvalidProp);\n  var isValidCharacter = useCallbackRef(isValidCharacterProp ?? isFloatingPointNumericCharacter);\n  var getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  var counter = useCounter(props);\n  var updateFn = counter.update,\n    incrementFn = counter.increment,\n    decrementFn = counter.decrement;\n  var _useState7 = useState2(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isFocused = _useState8[0],\n    setFocused = _useState8[1];\n  var isInteractive = !(isReadOnly || isDisabled);\n  var inputRef = useRef2(null);\n  var inputSelectionRef = useRef2(null);\n  var incrementButtonRef = useRef2(null);\n  var decrementButtonRef = useRef2(null);\n  var sanitize = useCallback2(function (value) {\n    return value.split(\"\").filter(isValidCharacter).join(\"\");\n  }, [isValidCharacter]);\n  var parse = useCallback2(function (value) {\n    return (parseValue == null ? void 0 : parseValue(value)) ?? value;\n  }, [parseValue]);\n  var format = useCallback2(function (value) {\n    return ((formatValue == null ? void 0 : formatValue(value)) ?? value).toString();\n  }, [formatValue]);\n  useUpdateEffect(function () {\n    if (counter.valueAsNumber > max) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    } else if (counter.valueAsNumber < min) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    }\n  }, [counter.valueAsNumber, counter.value, format, onInvalid]);\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.value != counter.value;\n    if (notInSync) {\n      var parsedInput = parse(inputRef.current.value);\n      counter.setValue(sanitize(parsedInput));\n    }\n  }, [parse, sanitize]);\n  var increment = useCallback2(function () {\n    var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stepProp;\n    if (isInteractive) {\n      incrementFn(step);\n    }\n  }, [incrementFn, isInteractive, stepProp]);\n  var decrement = useCallback2(function () {\n    var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stepProp;\n    if (isInteractive) {\n      decrementFn(step);\n    }\n  }, [decrementFn, isInteractive, stepProp]);\n  var spinner = useSpinner(increment, decrement);\n  useAttributeObserver(incrementButtonRef, \"disabled\", spinner.stop, spinner.isSpinning);\n  useAttributeObserver(decrementButtonRef, \"disabled\", spinner.stop, spinner.isSpinning);\n  var onChange = useCallback2(function (event) {\n    var evt = event.nativeEvent;\n    if (evt.isComposing) return;\n    var parsedInput = parse(event.currentTarget.value);\n    updateFn(sanitize(parsedInput));\n    inputSelectionRef.current = {\n      start: event.currentTarget.selectionStart,\n      end: event.currentTarget.selectionEnd\n    };\n  }, [updateFn, sanitize, parse]);\n  var _onFocus = useCallback2(function (event) {\n    var _a;\n    onFocus == null ? void 0 : onFocus(event);\n    if (!inputSelectionRef.current) return;\n    event.target.selectionStart = inputSelectionRef.current.start ?? ((_a = event.currentTarget.value) == null ? void 0 : _a.length);\n    event.currentTarget.selectionEnd = inputSelectionRef.current.end ?? event.currentTarget.selectionStart;\n  }, [onFocus]);\n  var onKeyDown = useCallback2(function (event) {\n    if (event.nativeEvent.isComposing) return;\n    if (!isValidNumericKeyboardEvent(event, isValidCharacter)) {\n      event.preventDefault();\n    }\n    var stepFactor = getStepFactor(event) * stepProp;\n    var eventKey = event.key;\n    var keyMap = {\n      ArrowUp: function ArrowUp() {\n        return increment(stepFactor);\n      },\n      ArrowDown: function ArrowDown() {\n        return decrement(stepFactor);\n      },\n      Home: function Home() {\n        return updateFn(min);\n      },\n      End: function End() {\n        return updateFn(max);\n      }\n    };\n    var action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [isValidCharacter, stepProp, increment, decrement, updateFn, min, max]);\n  var getStepFactor = function getStepFactor(event) {\n    var ratio = 1;\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n    return ratio;\n  };\n  var ariaValueText = useMemo(function () {\n    var text = getAriaValueText == null ? void 0 : getAriaValueText(counter.value);\n    if (text != null) return text;\n    var defaultText = counter.value.toString();\n    return !defaultText ? void 0 : defaultText;\n  }, [counter.value, getAriaValueText]);\n  var validateAndClamp = useCallback2(function () {\n    var next = counter.value;\n    if (counter.value === \"\") return;\n    var valueStartsWithE = /^[eE]/.test(counter.value.toString());\n    if (valueStartsWithE) {\n      counter.setValue(\"\");\n    } else {\n      if (counter.valueAsNumber < min) {\n        next = min;\n      }\n      if (counter.valueAsNumber > max) {\n        next = max;\n      }\n      counter.cast(next);\n    }\n  }, [counter, max, min]);\n  var onInputBlur = useCallback2(function () {\n    setFocused(false);\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  var focusInput = useCallback2(function () {\n    if (focusInputOnChange) {\n      requestAnimationFrame(function () {\n        var _a;\n        (_a = inputRef.current) == null ? void 0 : _a.focus();\n      });\n    }\n  }, [focusInputOnChange]);\n  var spinUp = useCallback2(function (event) {\n    event.preventDefault();\n    spinner.up();\n    focusInput();\n  }, [focusInput, spinner]);\n  var spinDown = useCallback2(function (event) {\n    event.preventDefault();\n    spinner.down();\n    focusInput();\n  }, [focusInput, spinner]);\n  useEventListener(function () {\n    return inputRef.current;\n  }, \"wheel\", function (event) {\n    var _a;\n    var doc = ((_a = inputRef.current) == null ? void 0 : _a.ownerDocument) ?? document;\n    var isInputFocused = doc.activeElement === inputRef.current;\n    if (!allowMouseWheel || !isInputFocused) return;\n    event.preventDefault();\n    var stepFactor = getStepFactor(event) * stepProp;\n    var direction = Math.sign(event.deltaY);\n    if (direction === -1) {\n      increment(stepFactor);\n    } else if (direction === 1) {\n      decrement(stepFactor);\n    }\n  }, {\n    passive: false\n  });\n  var getIncrementButtonProps = useCallback2(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var disabled = isDisabled || keepWithinRange && counter.isAtMax;\n    return _objectSpread({}, props2, {\n      ref: mergeRefs(ref, incrementButtonRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: callAllHandlers(props2.onPointerDown, function (event) {\n        if (event.button !== 0 || disabled) return;\n        spinUp(event);\n      }),\n      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n      onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n      disabled: disabled,\n      \"aria-disabled\": ariaAttr(disabled)\n    });\n  }, [counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]);\n  var getDecrementButtonProps = useCallback2(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var disabled = isDisabled || keepWithinRange && counter.isAtMin;\n    return _objectSpread({}, props2, {\n      ref: mergeRefs(ref, decrementButtonRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: callAllHandlers(props2.onPointerDown, function (event) {\n        if (event.button !== 0 || disabled) return;\n        spinDown(event);\n      }),\n      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n      onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n      disabled: disabled,\n      \"aria-disabled\": ariaAttr(disabled)\n    });\n  }, [counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]);\n  var getInputProps = useCallback2(function () {\n    var props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return _objectSpread({\n      name: name,\n      inputMode: inputMode,\n      type: \"text\",\n      pattern: pattern,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescBy,\n      id: id,\n      disabled: isDisabled\n    }, props2, {\n      readOnly: props2.readOnly ?? isReadOnly,\n      \"aria-readonly\": props2.readOnly ?? isReadOnly,\n      \"aria-required\": props2.required ?? isRequired,\n      required: props2.required ?? isRequired,\n      ref: mergeRefs(inputRef, ref),\n      value: format(counter.value),\n      role: \"spinbutton\",\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? void 0 : counter.valueAsNumber,\n      \"aria-invalid\": ariaAttr(isInvalid ?? counter.isOutOfRange),\n      \"aria-valuetext\": ariaValueText,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      onChange: callAllHandlers(props2.onChange, onChange),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, _onFocus, function () {\n        return setFocused(true);\n      }),\n      onBlur: callAllHandlers(props2.onBlur, onBlur, onInputBlur)\n    });\n  }, [name, inputMode, pattern, ariaLabelledBy, ariaLabel, format, ariaDescBy, id, isDisabled, isRequired, isReadOnly, isInvalid, counter.value, counter.valueAsNumber, counter.isOutOfRange, min, max, ariaValueText, onChange, onKeyDown, _onFocus, onBlur, onInputBlur]);\n  return {\n    value: format(counter.value),\n    valueAsNumber: counter.valueAsNumber,\n    isFocused: isFocused,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    getIncrementButtonProps: getIncrementButtonProps,\n    getDecrementButtonProps: getDecrementButtonProps,\n    getInputProps: getInputProps,\n    htmlProps: htmlProps\n  };\n}\n\n// src/number-input.tsx\nvar _createContext = createContext({\n    name: \"NumberInputStylesContext\",\n    errorMessage: \"useNumberInputStyles returned is 'undefined'. Seems you forgot to wrap the components in \\\"<NumberInput />\\\" \"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  NumberInputStylesProvider = _createContext2[0],\n  useNumberInputStyles = _createContext2[1];\nvar _createContext3 = createContext({\n    name: \"NumberInputContext\",\n    errorMessage: \"useNumberInputContext: `context` is undefined. Seems you forgot to wrap number-input's components within <NumberInput />\"\n  }),\n  _createContext4 = _slicedToArray(_createContext3, 2),\n  NumberInputProvider = _createContext4[0],\n  useNumberInputContext = _createContext4[1];\nvar NumberInput = forwardRef(function NumberInput2(props, ref) {\n  var styles = useMultiStyleConfig(\"NumberInput\", props);\n  var ownProps = omitThemingProps(props);\n  var controlProps = useFormControlProps(ownProps);\n  var _useNumberInput = useNumberInput(controlProps),\n    htmlProps = _useNumberInput.htmlProps,\n    context = _objectWithoutProperties(_useNumberInput, [\"htmlProps\"]);\n  var ctx = useMemo2(function () {\n    return context;\n  }, [context]);\n  return /* @__PURE__ */React.createElement(NumberInputProvider, {\n    value: ctx\n  }, /* @__PURE__ */React.createElement(NumberInputStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */React.createElement(chakra.div, _objectSpread({}, htmlProps, {\n    ref: ref,\n    className: cx(\"chakra-numberinput\", props.className),\n    __css: _objectSpread({\n      position: \"relative\",\n      zIndex: 0\n    }, styles.root)\n  }))));\n});\nNumberInput.displayName = \"NumberInput\";\nvar NumberInputStepper = forwardRef(function NumberInputStepper2(props, ref) {\n  var styles = useNumberInputStyles();\n  return /* @__PURE__ */React.createElement(chakra.div, _objectSpread({\n    \"aria-hidden\": true,\n    ref: ref\n  }, props, {\n    __css: _objectSpread({\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"absolute\",\n      top: \"0\",\n      insetEnd: \"0px\",\n      margin: \"1px\",\n      height: \"calc(100% - 2px)\",\n      zIndex: 1\n    }, styles.stepperGroup)\n  }));\n});\nNumberInputStepper.displayName = \"NumberInputStepper\";\nvar NumberInputField = forwardRef(function NumberInputField2(props, ref) {\n  var _useNumberInputContex = useNumberInputContext(),\n    getInputProps = _useNumberInputContex.getInputProps;\n  var input = getInputProps(props, ref);\n  var styles = useNumberInputStyles();\n  return /* @__PURE__ */React.createElement(chakra.input, _objectSpread({}, input, {\n    className: cx(\"chakra-numberinput__field\", props.className),\n    __css: _objectSpread({\n      width: \"100%\"\n    }, styles.field)\n  }));\n});\nNumberInputField.displayName = \"NumberInputField\";\nvar StyledStepper = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flex: 1,\n    transitionProperty: \"common\",\n    transitionDuration: \"normal\",\n    userSelect: \"none\",\n    cursor: \"pointer\",\n    lineHeight: \"normal\"\n  }\n});\nvar NumberDecrementStepper = forwardRef(function NumberDecrementStepper2(props, ref) {\n  var styles = useNumberInputStyles();\n  var _useNumberInputContex2 = useNumberInputContext(),\n    getDecrementButtonProps = _useNumberInputContex2.getDecrementButtonProps;\n  var decrement = getDecrementButtonProps(props, ref);\n  return /* @__PURE__ */React.createElement(StyledStepper, _objectSpread({}, decrement, {\n    __css: styles.stepper\n  }), props.children ?? /* @__PURE__ */React.createElement(TriangleDownIcon, null));\n});\nNumberDecrementStepper.displayName = \"NumberDecrementStepper\";\nvar NumberIncrementStepper = forwardRef(function NumberIncrementStepper2(props, ref) {\n  var _useNumberInputContex3 = useNumberInputContext(),\n    getIncrementButtonProps = _useNumberInputContex3.getIncrementButtonProps;\n  var increment = getIncrementButtonProps(props, ref);\n  var styles = useNumberInputStyles();\n  return /* @__PURE__ */React.createElement(StyledStepper, _objectSpread({}, increment, {\n    __css: styles.stepper\n  }), props.children ?? /* @__PURE__ */React.createElement(TriangleUpIcon, null));\n});\nNumberIncrementStepper.displayName = \"NumberIncrementStepper\";\nexport { NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, StyledStepper, useNumberInput, useNumberInputStyles };","map":null,"metadata":{},"sourceType":"module"}
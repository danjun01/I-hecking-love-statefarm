{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _export(target, all) {\n  for (var name in all) {\n    Object.defineProperty(target, name, {\n      enumerable: true,\n      get: all[name]\n    });\n  }\n}\n_export(exports, {\n  SelectOption: function SelectOption() {\n    return _SelectOption;\n  },\n  default: function _default() {\n    return _default2;\n  }\n});\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _tailwindMerge = require(\"tailwind-merge\");\nvar _objectsToString = _interopRequireDefault(require(\"../../utils/objectsToString\"));\nvar _theme = require(\"../../context/theme\");\nvar _selectContext = require(\"./SelectContext\");\nvar _select = require(\"../../types/components/select\");\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar _SelectOption = function _SelectOption(props) {\n  var handleSelect = function handleSelect() {\n    setSelectedIndex(index);\n    onChange(value);\n    setOpen(false);\n    setActiveIndex(null);\n  };\n  var handleKeyDown = function handleKeyDown(event) {\n    if (event.key === \"Enter\" || event.key === \" \" && !dataRef.current.typing) {\n      event.preventDefault();\n      handleSelect();\n    }\n  };\n  var value = props.value,\n    index = props.index,\n    disabled = props.disabled,\n    className = props.className,\n    children = props.children,\n    rest = _objectWithoutProperties(props, [\"value\", \"index\", \"disabled\", \"className\", \"children\"]);\n  var select = (0, _theme.useTheme)().select;\n  var styles = select.styles;\n  var base = styles.base;\n  var ref = (0, _selectContext.useSelect)(),\n    selectedIndex = ref.selectedIndex,\n    setSelectedIndex = ref.setSelectedIndex,\n    listRef = ref.listRef,\n    setOpen = ref.setOpen,\n    onChange = ref.onChange,\n    activeIndex = ref.activeIndex,\n    setActiveIndex = ref.setActiveIndex,\n    getItemProps = ref.getItemProps,\n    dataRef = ref.dataRef;\n  var optionBaseClasses = (0, _objectsToString.default)(base.option.initial);\n  var optionActiveClasses = (0, _objectsToString.default)(base.option.active);\n  var optionDisabledClasses = (0, _objectsToString.default)(base.option.disabled);\n  var _obj;\n  var classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)(optionBaseClasses, (_obj = {}, _defineProperty(_obj, optionActiveClasses, selectedIndex === index), _defineProperty(_obj, optionDisabledClasses, disabled), _obj)), className !== null && className !== void 0 ? className : \"\");\n  return _react.default.createElement(\"li\", _extends({}, rest, {\n    role: \"option\",\n    ref: function ref(node) {\n      return listRef.current[index] = node;\n    },\n    className: classes,\n    disabled: disabled,\n    tabIndex: activeIndex === index ? 0 : 1,\n    \"aria-selected\": activeIndex === index && selectedIndex === index,\n    \"data-selected\": selectedIndex === index\n  }, getItemProps({\n    onClick: function onClick(e) {\n      var onClick = rest === null || rest === void 0 ? void 0 : rest.onClick;\n      if (typeof onClick === \"function\") {\n        onClick(e);\n        handleSelect();\n      }\n      handleSelect();\n    },\n    onKeyDown: function onKeyDown(e) {\n      var onKeyDown = rest === null || rest === void 0 ? void 0 : rest.onKeyDown;\n      if (typeof onKeyDown === \"function\") {\n        onKeyDown(e);\n        handleKeyDown(e);\n      }\n      handleKeyDown(e);\n    }\n  })), children);\n};\n_SelectOption.defaultProps = {\n  value: \"\",\n  index: 0,\n  className: \"\",\n  disabled: false\n};\n_SelectOption.propTypes = {\n  value: _select.propTypesValue,\n  index: _select.propTypesIndex,\n  disabled: _select.propTypesDisabled,\n  className: _select.propTypesClassName,\n  children: _select.propTypesChildren\n};\n_SelectOption.displayName = \"MaterialTailwind.SelectOption\";\nvar _default2 = _SelectOption;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _slicedToArray from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// ../../../react-shim.js\nimport React from \"react\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n  return classNames.filter(Boolean).join(\" \");\n};\nfunction isDev() {\n  return process.env.NODE_ENV !== \"production\";\n}\nvar warn = function warn(options) {\n  var condition = options.condition,\n    message = options.message;\n  if (condition && isDev()) {\n    console.warn(message);\n  }\n};\n\n// src/collapse.tsx\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { forwardRef, useEffect, useState } from \"react\";\n\n// src/transition-utils.ts\nvar TRANSITION_EASINGS = {\n  ease: [0.25, 0.1, 0.25, 1],\n  easeIn: [0.4, 0, 1, 1],\n  easeOut: [0, 0, 0.2, 1],\n  easeInOut: [0.4, 0, 0.2, 1]\n};\nvar TRANSITION_VARIANTS = {\n  scale: {\n    enter: {\n      scale: 1\n    },\n    exit: {\n      scale: 0.95\n    }\n  },\n  fade: {\n    enter: {\n      opacity: 1\n    },\n    exit: {\n      opacity: 0\n    }\n  },\n  pushLeft: {\n    enter: {\n      x: \"100%\"\n    },\n    exit: {\n      x: \"-30%\"\n    }\n  },\n  pushRight: {\n    enter: {\n      x: \"-100%\"\n    },\n    exit: {\n      x: \"30%\"\n    }\n  },\n  pushUp: {\n    enter: {\n      y: \"100%\"\n    },\n    exit: {\n      y: \"-30%\"\n    }\n  },\n  pushDown: {\n    enter: {\n      y: \"-100%\"\n    },\n    exit: {\n      y: \"30%\"\n    }\n  },\n  slideLeft: {\n    position: {\n      left: 0,\n      top: 0,\n      bottom: 0,\n      width: \"100%\"\n    },\n    enter: {\n      x: 0,\n      y: 0\n    },\n    exit: {\n      x: \"-100%\",\n      y: 0\n    }\n  },\n  slideRight: {\n    position: {\n      right: 0,\n      top: 0,\n      bottom: 0,\n      width: \"100%\"\n    },\n    enter: {\n      x: 0,\n      y: 0\n    },\n    exit: {\n      x: \"100%\",\n      y: 0\n    }\n  },\n  slideUp: {\n    position: {\n      top: 0,\n      left: 0,\n      right: 0,\n      maxWidth: \"100vw\"\n    },\n    enter: {\n      x: 0,\n      y: 0\n    },\n    exit: {\n      x: 0,\n      y: \"-100%\"\n    }\n  },\n  slideDown: {\n    position: {\n      bottom: 0,\n      left: 0,\n      right: 0,\n      maxWidth: \"100vw\"\n    },\n    enter: {\n      x: 0,\n      y: 0\n    },\n    exit: {\n      x: 0,\n      y: \"100%\"\n    }\n  }\n};\nfunction getSlideTransition(options) {\n  var side = (options == null ? void 0 : options.direction) ?? \"right\";\n  switch (side) {\n    case \"right\":\n      return TRANSITION_VARIANTS.slideRight;\n    case \"left\":\n      return TRANSITION_VARIANTS.slideLeft;\n    case \"bottom\":\n      return TRANSITION_VARIANTS.slideDown;\n    case \"top\":\n      return TRANSITION_VARIANTS.slideUp;\n    default:\n      return TRANSITION_VARIANTS.slideRight;\n  }\n}\nvar TRANSITION_DEFAULTS = {\n  enter: {\n    duration: 0.2,\n    ease: TRANSITION_EASINGS.easeOut\n  },\n  exit: {\n    duration: 0.1,\n    ease: TRANSITION_EASINGS.easeIn\n  }\n};\nvar withDelay = {\n  enter: function enter(transition, delay) {\n    return _objectSpread({}, transition, {\n      delay: typeof delay === \"number\" ? delay : delay == null ? void 0 : delay[\"enter\"]\n    });\n  },\n  exit: function exit(transition, delay) {\n    return _objectSpread({}, transition, {\n      delay: typeof delay === \"number\" ? delay : delay == null ? void 0 : delay[\"exit\"]\n    });\n  }\n};\n\n// src/collapse.tsx\nvar isNumeric = function isNumeric(value) {\n  return value != null && parseInt(value.toString(), 10) > 0;\n};\nvar defaultTransitions = {\n  exit: {\n    height: {\n      duration: 0.2,\n      ease: TRANSITION_EASINGS.ease\n    },\n    opacity: {\n      duration: 0.3,\n      ease: TRANSITION_EASINGS.ease\n    }\n  },\n  enter: {\n    height: {\n      duration: 0.3,\n      ease: TRANSITION_EASINGS.ease\n    },\n    opacity: {\n      duration: 0.4,\n      ease: TRANSITION_EASINGS.ease\n    }\n  }\n};\nvar variants = {\n  exit: function exit(_ref) {\n    var animateOpacity = _ref.animateOpacity,\n      startingHeight = _ref.startingHeight,\n      transition = _ref.transition,\n      transitionEnd = _ref.transitionEnd,\n      delay = _ref.delay;\n    return _objectSpread({}, animateOpacity && {\n      opacity: isNumeric(startingHeight) ? 1 : 0\n    }, {\n      height: startingHeight,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit,\n      transition: (transition == null ? void 0 : transition.exit) ?? withDelay.exit(defaultTransitions.exit, delay)\n    });\n  },\n  enter: function enter(_ref2) {\n    var animateOpacity = _ref2.animateOpacity,\n      endingHeight = _ref2.endingHeight,\n      transition = _ref2.transition,\n      transitionEnd = _ref2.transitionEnd,\n      delay = _ref2.delay;\n    return _objectSpread({}, animateOpacity && {\n      opacity: 1\n    }, {\n      height: endingHeight,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter,\n      transition: (transition == null ? void 0 : transition.enter) ?? withDelay.enter(defaultTransitions.enter, delay)\n    });\n  }\n};\nvar Collapse = forwardRef(function (props, ref) {\n  var isOpen = props.in,\n    unmountOnExit = props.unmountOnExit,\n    _props$animateOpacity = props.animateOpacity,\n    animateOpacity = _props$animateOpacity === void 0 ? true : _props$animateOpacity,\n    _props$startingHeight = props.startingHeight,\n    startingHeight = _props$startingHeight === void 0 ? 0 : _props$startingHeight,\n    _props$endingHeight = props.endingHeight,\n    endingHeight = _props$endingHeight === void 0 ? \"auto\" : _props$endingHeight,\n    style = props.style,\n    className = props.className,\n    transition = props.transition,\n    transitionEnd = props.transitionEnd,\n    rest = _objectWithoutProperties(props, [\"in\", \"unmountOnExit\", \"animateOpacity\", \"startingHeight\", \"endingHeight\", \"style\", \"className\", \"transition\", \"transitionEnd\"]);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    mounted = _useState2[0],\n    setMounted = _useState2[1];\n  useEffect(function () {\n    var timeout = setTimeout(function () {\n      setMounted(true);\n    });\n    return function () {\n      return clearTimeout(timeout);\n    };\n  }, []);\n  warn({\n    condition: Boolean(startingHeight > 0 && unmountOnExit),\n    message: \"startingHeight and unmountOnExit are mutually exclusive. You can't use them together\"\n  });\n  var hasStartingHeight = parseFloat(startingHeight.toString()) > 0;\n  var custom = {\n    startingHeight: startingHeight,\n    endingHeight: endingHeight,\n    animateOpacity: animateOpacity,\n    transition: !mounted ? {\n      enter: {\n        duration: 0\n      }\n    } : transition,\n    transitionEnd: {\n      enter: transitionEnd == null ? void 0 : transitionEnd.enter,\n      exit: unmountOnExit ? transitionEnd == null ? void 0 : transitionEnd.exit : _objectSpread({}, transitionEnd == null ? void 0 : transitionEnd.exit, {\n        display: hasStartingHeight ? \"block\" : \"none\"\n      })\n    }\n  };\n  var show = unmountOnExit ? isOpen : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  return /* @__PURE__ */React.createElement(AnimatePresence, {\n    initial: false,\n    custom: custom\n  }, show && /* @__PURE__ */React.createElement(motion.div, _objectSpread({\n    ref: ref\n  }, rest, {\n    className: cx(\"chakra-collapse\", className),\n    style: _objectSpread({\n      overflow: \"hidden\",\n      display: \"block\"\n    }, style),\n    custom: custom,\n    variants: variants,\n    initial: unmountOnExit ? \"exit\" : false,\n    animate: animate,\n    exit: \"exit\"\n  })));\n});\nCollapse.displayName = \"Collapse\";\n\n// src/fade.tsx\nimport { AnimatePresence as AnimatePresence2, motion as motion2 } from \"framer-motion\";\nimport { forwardRef as forwardRef2 } from \"react\";\nvar variants2 = {\n  enter: function enter() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      transition = _ref3.transition,\n      transitionEnd = _ref3.transitionEnd,\n      delay = _ref3.delay;\n    return {\n      opacity: 1,\n      transition: (transition == null ? void 0 : transition.enter) ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  },\n  exit: function exit() {\n    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      transition = _ref4.transition,\n      transitionEnd = _ref4.transitionEnd,\n      delay = _ref4.delay;\n    return {\n      opacity: 0,\n      transition: (transition == null ? void 0 : transition.exit) ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  }\n};\nvar fadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants2\n};\nvar Fade = forwardRef2(function Fade2(props, ref) {\n  var unmountOnExit = props.unmountOnExit,\n    isOpen = props.in,\n    className = props.className,\n    transition = props.transition,\n    transitionEnd = props.transitionEnd,\n    delay = props.delay,\n    rest = _objectWithoutProperties(props, [\"unmountOnExit\", \"in\", \"className\", \"transition\", \"transitionEnd\", \"delay\"]);\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var custom = {\n    transition: transition,\n    transitionEnd: transitionEnd,\n    delay: delay\n  };\n  return /* @__PURE__ */React.createElement(AnimatePresence2, {\n    custom: custom\n  }, show && /* @__PURE__ */React.createElement(motion2.div, _objectSpread({\n    ref: ref,\n    className: cx(\"chakra-fade\", className),\n    custom: custom\n  }, fadeConfig, {\n    animate: animate\n  }, rest)));\n});\nFade.displayName = \"Fade\";\n\n// src/scale-fade.tsx\nimport { AnimatePresence as AnimatePresence3, motion as motion3 } from \"framer-motion\";\nimport { forwardRef as forwardRef3 } from \"react\";\nvar variants3 = {\n  exit: function exit(_ref5) {\n    var reverse = _ref5.reverse,\n      initialScale = _ref5.initialScale,\n      transition = _ref5.transition,\n      transitionEnd = _ref5.transitionEnd,\n      delay = _ref5.delay;\n    return _objectSpread({\n      opacity: 0\n    }, reverse ? {\n      scale: initialScale,\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    } : {\n      transitionEnd: _objectSpread({\n        scale: initialScale\n      }, transitionEnd == null ? void 0 : transitionEnd.exit)\n    }, {\n      transition: (transition == null ? void 0 : transition.exit) ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay)\n    });\n  },\n  enter: function enter(_ref6) {\n    var transitionEnd = _ref6.transitionEnd,\n      transition = _ref6.transition,\n      delay = _ref6.delay;\n    return {\n      opacity: 1,\n      scale: 1,\n      transition: (transition == null ? void 0 : transition.enter) ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  }\n};\nvar scaleFadeConfig = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants3\n};\nvar ScaleFade = forwardRef3(function ScaleFade2(props, ref) {\n  var unmountOnExit = props.unmountOnExit,\n    isOpen = props.in,\n    _props$reverse = props.reverse,\n    reverse = _props$reverse === void 0 ? true : _props$reverse,\n    _props$initialScale = props.initialScale,\n    initialScale = _props$initialScale === void 0 ? 0.95 : _props$initialScale,\n    className = props.className,\n    transition = props.transition,\n    transitionEnd = props.transitionEnd,\n    delay = props.delay,\n    rest = _objectWithoutProperties(props, [\"unmountOnExit\", \"in\", \"reverse\", \"initialScale\", \"className\", \"transition\", \"transitionEnd\", \"delay\"]);\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    initialScale: initialScale,\n    reverse: reverse,\n    transition: transition,\n    transitionEnd: transitionEnd,\n    delay: delay\n  };\n  return /* @__PURE__ */React.createElement(AnimatePresence3, {\n    custom: custom\n  }, show && /* @__PURE__ */React.createElement(motion3.div, _objectSpread({\n    ref: ref,\n    className: cx(\"chakra-offset-slide\", className)\n  }, scaleFadeConfig, {\n    animate: animate,\n    custom: custom\n  }, rest)));\n});\nScaleFade.displayName = \"ScaleFade\";\n\n// src/slide.tsx\nimport { AnimatePresence as AnimatePresence4, motion as motion4 } from \"framer-motion\";\nimport { forwardRef as forwardRef4 } from \"react\";\nvar defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TRANSITION_EASINGS.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nvar variants4 = {\n  exit: function exit(_ref7) {\n    var direction = _ref7.direction,\n      transition = _ref7.transition,\n      transitionEnd = _ref7.transitionEnd,\n      delay = _ref7.delay;\n    var _getSlideTransition = getSlideTransition({\n        direction: direction\n      }),\n      exitStyles = _getSlideTransition.exit;\n    return _objectSpread({}, exitStyles, {\n      transition: (transition == null ? void 0 : transition.exit) ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    });\n  },\n  enter: function enter(_ref8) {\n    var direction = _ref8.direction,\n      transitionEnd = _ref8.transitionEnd,\n      transition = _ref8.transition,\n      delay = _ref8.delay;\n    var _getSlideTransition2 = getSlideTransition({\n        direction: direction\n      }),\n      enterStyles = _getSlideTransition2.enter;\n    return _objectSpread({}, enterStyles, {\n      transition: (transition == null ? void 0 : transition.enter) ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    });\n  }\n};\nvar Slide = forwardRef4(function Slide2(props, ref) {\n  var _props$direction = props.direction,\n    direction = _props$direction === void 0 ? \"right\" : _props$direction,\n    style = props.style,\n    unmountOnExit = props.unmountOnExit,\n    isOpen = props.in,\n    className = props.className,\n    transition = props.transition,\n    transitionEnd = props.transitionEnd,\n    delay = props.delay,\n    motionProps = props.motionProps,\n    rest = _objectWithoutProperties(props, [\"direction\", \"style\", \"unmountOnExit\", \"in\", \"className\", \"transition\", \"transitionEnd\", \"delay\", \"motionProps\"]);\n  var transitionStyles = getSlideTransition({\n    direction: direction\n  });\n  var computedStyle = Object.assign({\n    position: \"fixed\"\n  }, transitionStyles.position, style);\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    transitionEnd: transitionEnd,\n    transition: transition,\n    direction: direction,\n    delay: delay\n  };\n  return /* @__PURE__ */React.createElement(AnimatePresence4, {\n    custom: custom\n  }, show && /* @__PURE__ */React.createElement(motion4.div, _objectSpread({}, rest, {\n    ref: ref,\n    initial: \"exit\",\n    className: cx(\"chakra-slide\", className),\n    animate: animate,\n    exit: \"exit\",\n    custom: custom,\n    variants: variants4,\n    style: computedStyle\n  }, motionProps)));\n});\nSlide.displayName = \"Slide\";\n\n// src/slide-fade.tsx\nimport { AnimatePresence as AnimatePresence5, motion as motion5 } from \"framer-motion\";\nimport { forwardRef as forwardRef5 } from \"react\";\nvar variants5 = {\n  initial: function initial(_ref9) {\n    var offsetX = _ref9.offsetX,\n      offsetY = _ref9.offsetY,\n      transition = _ref9.transition,\n      transitionEnd = _ref9.transitionEnd,\n      delay = _ref9.delay;\n    return {\n      opacity: 0,\n      x: offsetX,\n      y: offsetY,\n      transition: (transition == null ? void 0 : transition.exit) ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    };\n  },\n  enter: function enter(_ref10) {\n    var transition = _ref10.transition,\n      transitionEnd = _ref10.transitionEnd,\n      delay = _ref10.delay;\n    return {\n      opacity: 1,\n      x: 0,\n      y: 0,\n      transition: (transition == null ? void 0 : transition.enter) ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    };\n  },\n  exit: function exit(_ref11) {\n    var offsetY = _ref11.offsetY,\n      offsetX = _ref11.offsetX,\n      transition = _ref11.transition,\n      transitionEnd = _ref11.transitionEnd,\n      reverse = _ref11.reverse,\n      delay = _ref11.delay;\n    var offset = {\n      x: offsetX,\n      y: offsetY\n    };\n    return _objectSpread({\n      opacity: 0,\n      transition: (transition == null ? void 0 : transition.exit) ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay)\n    }, reverse ? _objectSpread({}, offset, {\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    }) : {\n      transitionEnd: _objectSpread({}, offset, transitionEnd == null ? void 0 : transitionEnd.exit)\n    });\n  }\n};\nvar slideFadeConfig = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants5\n};\nvar SlideFade = forwardRef5(function SlideFade2(props, ref) {\n  var unmountOnExit = props.unmountOnExit,\n    isOpen = props.in,\n    _props$reverse2 = props.reverse,\n    reverse = _props$reverse2 === void 0 ? true : _props$reverse2,\n    className = props.className,\n    _props$offsetX = props.offsetX,\n    offsetX = _props$offsetX === void 0 ? 0 : _props$offsetX,\n    _props$offsetY = props.offsetY,\n    offsetY = _props$offsetY === void 0 ? 8 : _props$offsetY,\n    transition = props.transition,\n    transitionEnd = props.transitionEnd,\n    delay = props.delay,\n    rest = _objectWithoutProperties(props, [\"unmountOnExit\", \"in\", \"reverse\", \"className\", \"offsetX\", \"offsetY\", \"transition\", \"transitionEnd\", \"delay\"]);\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    offsetX: offsetX,\n    offsetY: offsetY,\n    reverse: reverse,\n    transition: transition,\n    transitionEnd: transitionEnd,\n    delay: delay\n  };\n  return /* @__PURE__ */React.createElement(AnimatePresence5, {\n    custom: custom\n  }, show && /* @__PURE__ */React.createElement(motion5.div, _objectSpread({\n    ref: ref,\n    className: cx(\"chakra-offset-slide\", className),\n    custom: custom\n  }, slideFadeConfig, {\n    animate: animate\n  }, rest)));\n});\nSlideFade.displayName = \"SlideFade\";\nexport { Collapse, TRANSITION_EASINGS as EASINGS, Fade, ScaleFade, Slide, SlideFade, fadeConfig, getSlideTransition, scaleFadeConfig, slideFadeConfig, withDelay };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _export(target, all) {\n  for (var name in all) {\n    Object.defineProperty(target, name, {\n      enumerable: true,\n      get: all[name]\n    });\n  }\n}\n_export(exports, {\n  Tooltip: function Tooltip() {\n    return _Tooltip;\n  },\n  default: function _default() {\n    return _default2;\n  }\n});\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactDomInteractions = require(\"@floating-ui/react-dom-interactions\");\nvar _framerMotion = require(\"framer-motion\");\nvar _reactMergeRefs = _interopRequireDefault(require(\"react-merge-refs\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _tailwindMerge = require(\"tailwind-merge\");\nvar _deepmerge = _interopRequireDefault(require(\"deepmerge\"));\nvar _objectsToString = _interopRequireDefault(require(\"../../utils/objectsToString\"));\nvar _theme = require(\"../../context/theme\");\nvar _popover = require(\"../../types/components/popover\");\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpreadProps(target, source) {\n  source = source != null ? source : {};\n  if (Object.getOwnPropertyDescriptors) {\n    Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n  } else {\n    ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nvar _Tooltip = _react.default.forwardRef(function (_param, ref) {\n  var open = _param.open,\n    handler = _param.handler,\n    content = _param.content,\n    interactive = _param.interactive,\n    placement = _param.placement,\n    offset = _param.offset,\n    dismiss = _param.dismiss,\n    animate = _param.animate,\n    className = _param.className,\n    children = _param.children,\n    rest = _objectWithoutProperties(_param, [\"open\", \"handler\", \"content\", \"interactive\", \"placement\", \"offset\", \"dismiss\", \"animate\", \"className\", \"children\"]);\n  var tooltip = (0, _theme.useTheme)().tooltip;\n  var defaultProps = tooltip.defaultProps,\n    base = tooltip.styles.base;\n  var _$ref = _slicedToArray(_react.default.useState(false), 2),\n    internalOpen = _$ref[0],\n    setInternalOpen = _$ref[1];\n  open = open !== null && open !== void 0 ? open : internalOpen;\n  handler = handler !== null && handler !== void 0 ? handler : setInternalOpen;\n  interactive = interactive !== null && interactive !== void 0 ? interactive : defaultProps.interactive;\n  placement = placement !== null && placement !== void 0 ? placement : defaultProps.placement;\n  offset = offset !== null && offset !== void 0 ? offset : defaultProps.offset;\n  dismiss = dismiss !== null && dismiss !== void 0 ? dismiss : defaultProps.dismiss;\n  animate = animate !== null && animate !== void 0 ? animate : defaultProps.animate;\n  className = className !== null && className !== void 0 ? className : defaultProps.className;\n  var tooltipClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base)), className);\n  var animation = {\n    unmount: {\n      opacity: 0\n    },\n    mount: {\n      opacity: 1\n    }\n  };\n  var appliedAnimation = (0, _deepmerge.default)(animation, animate);\n  var _$ref1 = (0, _reactDomInteractions.useFloating)({\n      open: open,\n      onOpenChange: handler,\n      middleware: [(0, _reactDomInteractions.offset)(offset), (0, _reactDomInteractions.flip)(), (0, _reactDomInteractions.shift)()],\n      placement: placement\n    }),\n    x = _$ref1.x,\n    y = _$ref1.y,\n    reference = _$ref1.reference,\n    floating = _$ref1.floating,\n    strategy = _$ref1.strategy,\n    refs = _$ref1.refs,\n    update = _$ref1.update,\n    context = _$ref1.context;\n  var _$ref2 = (0, _reactDomInteractions.useInteractions)([(0, _reactDomInteractions.useClick)(context, {\n      enabled: interactive\n    }), (0, _reactDomInteractions.useFocus)(context), (0, _reactDomInteractions.useHover)(context), (0, _reactDomInteractions.useRole)(context, {\n      role: \"tooltip\"\n    }), (0, _reactDomInteractions.useDismiss)(context, dismiss)]),\n    getReferenceProps = _$ref2.getReferenceProps,\n    getFloatingProps = _$ref2.getFloatingProps;\n  _react.default.useEffect(function () {\n    if (refs.reference.current && refs.floating.current && open) {\n      return (0, _reactDomInteractions.autoUpdate)(refs.reference.current, refs.floating.current, update);\n    }\n  }, [open, update, refs.reference, refs.floating]);\n  var mergedRef = _react.default.useMemo(function () {\n    return (0, _reactMergeRefs.default)([ref, floating]);\n  }, [floating, ref]);\n  var childMergedRef = _react.default.useMemo(function () {\n    return (0, _reactMergeRefs.default)([ref, reference]);\n  }, [reference, ref]);\n  var NewAnimatePresence = _framerMotion.AnimatePresence;\n  return _react.default.createElement(_react.default.Fragment, null, typeof children === \"string\" ? _react.default.createElement(\"span\", _extends({}, getReferenceProps({\n    ref: childMergedRef\n  })), children) : _react.default.cloneElement(children, _objectSpread({}, getReferenceProps(_objectSpreadProps(_objectSpread({}, children === null || children === void 0 ? void 0 : children.props), {\n    ref: childMergedRef\n  })))), _react.default.createElement(_reactDomInteractions.FloatingPortal, null, _react.default.createElement(NewAnimatePresence, null, open && _react.default.createElement(_framerMotion.motion.div, _extends({}, getFloatingProps(_objectSpreadProps(_objectSpread({}, rest), {\n    ref: mergedRef,\n    className: tooltipClasses,\n    style: {\n      position: strategy,\n      top: y !== null && y !== void 0 ? y : \"\",\n      left: x !== null && x !== void 0 ? x : \"\"\n    }\n  })), {\n    initial: \"unmount\",\n    exit: \"unmount\",\n    animate: open ? \"mount\" : \"unmount\",\n    variants: appliedAnimation\n  }), content))));\n});\n_Tooltip.propTypes = {\n  open: _popover.propTypesOpen,\n  handler: _popover.propTypesHandler,\n  content: _popover.propTypesContent,\n  interactive: _popover.propTypesInteractive,\n  placement: _propTypes.default.oneOf(_popover.propTypesPlacement),\n  offset: _popover.propTypesOffset,\n  dismiss: _popover.propTypesDismiss,\n  animate: _popover.propTypesAnimate,\n  className: _popover.propTypesClassName,\n  children: _popover.propTypesChildren\n};\n_Tooltip.displayName = \"MaterialTailwind.Tooltip\";\nvar _default2 = _Tooltip;","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _defineProperty from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/daniel/Documents/HackUTDIX/I-hecking-love-statefarm/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n// ../../../react-shim.js\nimport React from \"react\";\n\n// src/control-box.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar ControlBox = function ControlBox(props) {\n  var _css;\n  var _props$type = props.type,\n    type = _props$type === void 0 ? \"checkbox\" : _props$type,\n    _hover = props._hover,\n    _invalid = props._invalid,\n    _disabled = props._disabled,\n    _focus = props._focus,\n    _checked = props._checked,\n    _props$_child = props._child,\n    _child = _props$_child === void 0 ? {\n      opacity: 0\n    } : _props$_child,\n    _props$_checkedAndChi = props._checkedAndChild,\n    _checkedAndChild = _props$_checkedAndChi === void 0 ? {\n      opacity: 1\n    } : _props$_checkedAndChi,\n    _checkedAndDisabled = props._checkedAndDisabled,\n    _checkedAndFocus = props._checkedAndFocus,\n    _checkedAndHover = props._checkedAndHover,\n    children = props.children,\n    rest = _objectWithoutProperties(props, [\"type\", \"_hover\", \"_invalid\", \"_disabled\", \"_focus\", \"_checked\", \"_child\", \"_checkedAndChild\", \"_checkedAndDisabled\", \"_checkedAndFocus\", \"_checkedAndHover\", \"children\"]);\n  var checkedAndDisabled = \"input[type=\".concat(type, \"]:checked:disabled + &\");\n  var checkedAndHover = \"input[type=\".concat(type, \"]:checked:hover:not(:disabled) + &\");\n  var checkedAndFocus = \"input[type=\".concat(type, \"]:checked:focus + &\");\n  var disabled = \"input[type=\".concat(type, \"]:disabled + &\");\n  var focus = \"input[type=\".concat(type, \"]:focus + &\");\n  var hover = \"input[type=\".concat(type, \"]:hover:not(:disabled):not(:checked) + &\");\n  var checked = \"input[type=\".concat(type, \"]:checked + &, input[type=\").concat(type, \"][aria-checked=mixed] + &\");\n  var invalid = \"input[type=\".concat(type, \"][aria-invalid=true] + &\");\n  var child = \"& > *\";\n  return /* @__PURE__ */React.createElement(chakra.div, _objectSpread({}, rest, {\n    \"aria-hidden\": true,\n    __css: (_css = {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      transitionProperty: \"common\",\n      transitionDuration: \"fast\",\n      flexShrink: 0\n    }, _defineProperty(_css, focus, _focus), _defineProperty(_css, hover, _hover), _defineProperty(_css, disabled, _disabled), _defineProperty(_css, invalid, _invalid), _defineProperty(_css, checkedAndDisabled, _checkedAndDisabled), _defineProperty(_css, checkedAndFocus, _checkedAndFocus), _defineProperty(_css, checkedAndHover, _checkedAndHover), _defineProperty(_css, child, _child), _defineProperty(_css, checked, _objectSpread({}, _checked, _defineProperty({}, child, _checkedAndChild))), _css)\n  }), children);\n};\nControlBox.displayName = \"ControlBox\";\nexport { ControlBox };","map":null,"metadata":{},"sourceType":"module"}
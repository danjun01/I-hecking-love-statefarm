{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _export(target, all) {\n  for (var name in all) {\n    Object.defineProperty(target, name, {\n      enumerable: true,\n      get: all[name]\n    });\n  }\n}\n_export(exports, {\n  Switch: function Switch() {\n    return _Switch;\n  },\n  default: function _default() {\n    return _default2;\n  }\n});\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _materialRippleEffects = _interopRequireDefault(require(\"material-ripple-effects\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _tailwindMerge = require(\"tailwind-merge\");\nvar _findMatch = _interopRequireDefault(require(\"../../utils/findMatch\"));\nvar _objectsToString = _interopRequireDefault(require(\"../../utils/objectsToString\"));\nvar _theme = require(\"../../context/theme\");\nvar _checkbox = require(\"../../types/components/checkbox\");\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar _Switch = _react.default.forwardRef(function (_param, ref) {\n  var color = _param.color,\n    label = _param.label,\n    ripple = _param.ripple,\n    className = _param.className,\n    containerProps = _param.containerProps,\n    circleProps = _param.circleProps,\n    labelProps = _param.labelProps,\n    rest = _objectWithoutProperties(_param, [\"color\", \"label\", \"ripple\", \"className\", \"containerProps\", \"circleProps\", \"labelProps\"]);\n  var _$ref = (0, _theme.useTheme)(),\n    toggle = _$ref.switch;\n  var defaultProps = toggle.defaultProps,\n    valid = toggle.valid,\n    styles = toggle.styles;\n  var base = styles.base,\n    colors = styles.colors;\n  color = color !== null && color !== void 0 ? color : defaultProps.color;\n  ripple = ripple !== null && ripple !== void 0 ? ripple : defaultProps.ripple;\n  className = className !== null && className !== void 0 ? className : defaultProps.className;\n  var rippleEffect = ripple !== undefined && new _materialRippleEffects.default();\n  var rootClasses = (0, _classnames.default)((0, _objectsToString.default)(base.root));\n  var containerClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.container)), containerProps === null || containerProps === void 0 ? void 0 : containerProps.className);\n  var inputClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.input), (0, _objectsToString.default)(colors[(0, _findMatch.default)(valid.colors, color, \"blue\")])), className);\n  var circleClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.circle), colors[(0, _findMatch.default)(valid.colors, color, \"blue\")].circle, colors[(0, _findMatch.default)(valid.colors, color, \"blue\")].before), circleProps === null || circleProps === void 0 ? void 0 : circleProps.className);\n  var rippleClasses = (0, _classnames.default)((0, _objectsToString.default)(base.ripple));\n  var labelClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.label)), labelProps === null || labelProps === void 0 ? void 0 : labelProps.className);\n  return _react.default.createElement(\"div\", {\n    ref: ref,\n    className: rootClasses\n  }, _react.default.createElement(\"div\", _extends({}, containerProps, {\n    className: containerClasses\n  }), _react.default.createElement(\"input\", _extends({}, rest, {\n    type: \"checkbox\",\n    id: rest.id || \"switch\",\n    className: inputClasses\n  })), _react.default.createElement(\"label\", _extends({}, circleProps, {\n    htmlFor: rest.id || \"switch\",\n    className: circleClasses\n  }), ripple && _react.default.createElement(\"div\", {\n    className: rippleClasses,\n    onMouseDown: function onMouseDown(e) {\n      var onMouseDown = containerProps === null || containerProps === void 0 ? void 0 : containerProps.onMouseDown;\n      if (ripple) {\n        rippleEffect.create(e, \"dark\");\n      }\n      return typeof onMouseDown === \"function\" && onMouseDown(e);\n    }\n  }))), label && _react.default.createElement(\"label\", _extends({}, labelProps, {\n    htmlFor: rest.id || \"switch\",\n    className: labelClasses\n  }), label));\n});\n_Switch.propTypes = {\n  color: _propTypes.default.oneOf(_checkbox.propTypesColor),\n  label: _checkbox.propTypesLabel,\n  ripple: _checkbox.propTypesRipple,\n  className: _checkbox.propTypesClassName,\n  containerProps: _checkbox.propTypesContainerProps,\n  labelProps: _checkbox.propTypesLabelProps,\n  circleProps: _checkbox.propTypesCircleProps\n};\n_Switch.displayName = \"MaterialTailwind.Switch\";\nvar _default2 = _Switch;","map":null,"metadata":{},"sourceType":"script"}
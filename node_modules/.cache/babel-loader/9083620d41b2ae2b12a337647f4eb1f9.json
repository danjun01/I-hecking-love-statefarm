{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction _export(target, all) {\n  for (var name in all) {\n    Object.defineProperty(target, name, {\n      enumerable: true,\n      get: all[name]\n    });\n  }\n}\n_export(exports, {\n  AccordionBody: function AccordionBody() {\n    return _AccordionBody;\n  },\n  default: function _default() {\n    return _default2;\n  }\n});\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _framerMotion = require(\"framer-motion\");\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _deepmerge = _interopRequireDefault(require(\"deepmerge\"));\nvar _objectsToString = _interopRequireDefault(require(\"../../utils/objectsToString\"));\nvar _tailwindMerge = require(\"tailwind-merge\");\nvar _accordionContext = require(\"./AccordionContext\");\nvar _theme = require(\"../../context/theme\");\nvar _accordion = require(\"../../types/components/accordion\");\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nvar _AccordionBody = _react.default.forwardRef(function (_param, ref) {\n  var className = _param.className,\n    children = _param.children,\n    rest = _objectWithoutProperties(_param, [\"className\", \"children\"]);\n  var _$ref = (0, _accordionContext.useAccordion)(),\n    open = _$ref.open,\n    animate = _$ref.animate;\n  var accordion = (0, _theme.useTheme)().accordion;\n  var base = accordion.styles.base;\n  var bodyEl = _react.default.useRef(null);\n  var _$ref1 = _slicedToArray(_react.default.useState(0), 2),\n    height = _$ref1[0],\n    setHeight = _$ref1[1];\n  _react.default.useEffect(function () {\n    var _$ref;\n    setHeight((_$ref = bodyEl.current) === null || _$ref === void 0 ? void 0 : _$ref.scrollHeight);\n  }, []);\n  className = className !== null && className !== void 0 ? className : \"\";\n  var bodyClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.body)), className);\n  var heightAnimation = {\n    unmount: {\n      height: \"0px\",\n      transition: {\n        duration: .2,\n        times: [.4, 0, .2, 1]\n      }\n    },\n    mount: {\n      height: \"\".concat(height + 10, \"px\"),\n      transition: {\n        duration: .2,\n        times: [.4, 0, .2, 1]\n      }\n    }\n  };\n  var mainAnimation = {\n    unmount: {\n      opacity: 0,\n      transition: {\n        duration: .3,\n        ease: \"linear\"\n      }\n    },\n    mount: {\n      opacity: 1,\n      transition: {\n        duration: .3,\n        ease: \"linear\"\n      }\n    }\n  };\n  var appliedAnimation = (0, _deepmerge.default)(mainAnimation, animate);\n  return _react.default.createElement(_framerMotion.motion.div, {\n    className: \"overflow-hidden\",\n    ref: bodyEl,\n    initial: \"unmount\",\n    exit: \"unmount\",\n    animate: open ? \"mount\" : \"unmount\",\n    variants: heightAnimation\n  }, _react.default.createElement(_framerMotion.motion.div, _extends({}, rest, {\n    ref: ref,\n    className: bodyClasses,\n    initial: \"unmount\",\n    exit: \"unmount\",\n    animate: open ? \"mount\" : \"unmount\",\n    variants: appliedAnimation\n  }), children));\n});\n_AccordionBody.propTypes = {\n  className: _accordion.propTypesClassName,\n  children: _accordion.propTypesChildren\n};\n_AccordionBody.displayName = \"MaterialTailwind.AccordionBody\";\nvar _default2 = _AccordionBody;","map":null,"metadata":{},"sourceType":"script"}
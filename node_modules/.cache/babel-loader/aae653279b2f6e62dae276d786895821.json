{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\";\n\n// src/chakra-provider.tsx\nimport { CSSReset, CSSPolyfill } from \"@chakra-ui/css-reset\";\nimport { PortalManager } from \"@chakra-ui/portal\";\nimport { ColorModeProvider, GlobalStyle, ThemeProvider } from \"@chakra-ui/system\";\nimport { EnvironmentProvider } from \"@chakra-ui/react-env\";\nvar ChakraProvider = function ChakraProvider(props) {\n  var children = props.children,\n    colorModeManager = props.colorModeManager,\n    portalZIndex = props.portalZIndex,\n    _props$resetCSS = props.resetCSS,\n    resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS,\n    _props$theme = props.theme,\n    theme = _props$theme === void 0 ? {} : _props$theme,\n    environment = props.environment,\n    cssVarsRoot = props.cssVarsRoot;\n  var _children = /* @__PURE__ */React.createElement(EnvironmentProvider, {\n    environment: environment\n  }, children);\n  return /* @__PURE__ */React.createElement(ThemeProvider, {\n    theme: theme,\n    cssVarsRoot: cssVarsRoot\n  }, /* @__PURE__ */React.createElement(ColorModeProvider, {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, resetCSS ? /* @__PURE__ */React.createElement(CSSReset, null) : /* @__PURE__ */React.createElement(CSSPolyfill, null), /* @__PURE__ */React.createElement(GlobalStyle, null), portalZIndex ? /* @__PURE__ */React.createElement(PortalManager, {\n    zIndex: portalZIndex\n  }, _children) : _children));\n};\nexport { ChakraProvider };","map":null,"metadata":{},"sourceType":"module"}